!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AUTO_LOAD_LOG_OUTPUT	auto.loader.php	/^            defined('AUTO_LOAD_LOG_OUTPUT') || define('AUTO_LOAD_LOG_OUTPUT', FALSE);$/;"	d
AUTO_LOAD_LOG_OUTPUT	lib/PushServer/auto.loader.php	/^            defined('AUTO_LOAD_LOG_OUTPUT') || define('AUTO_LOAD_LOG_OUTPUT', FALSE);$/;"	d
AllUsersHistoryTable	model/dao/AllUsersHistoryTable.php	/^class AllUsersHistoryTable extends EventDao$/;"	c
Apns	lib/PushServer/model/apns/Apns.php	/^class Apns$/;"	c
ApnsPHP_Abstract	lib/PushServer/core/ApnsPHP/Abstract.php	/^abstract class ApnsPHP_Abstract$/;"	c
ApnsPHP_Autoload	lib/PushServer/core/ApnsPHP/Autoload.php	/^function ApnsPHP_Autoload($sClassName)$/;"	f
ApnsPHP_Exception	lib/PushServer/core/ApnsPHP/Exception.php	/^class ApnsPHP_Exception extends Exception$/;"	c
ApnsPHP_Feedback	lib/PushServer/core/ApnsPHP/Feedback.php	/^class ApnsPHP_Feedback extends ApnsPHP_Abstract$/;"	c
ApnsPHP_Log_Embedded	lib/PushServer/core/ApnsPHP/Log/Embedded.php	/^class ApnsPHP_Log_Embedded implements ApnsPHP_Log_Interface$/;"	c
ApnsPHP_Log_Interface	lib/PushServer/core/ApnsPHP/Log/Interface.php	/^interface ApnsPHP_Log_Interface$/;"	i
ApnsPHP_Message	lib/PushServer/core/ApnsPHP/Message.php	/^class ApnsPHP_Message$/;"	c
ApnsPHP_Message_Custom	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^class ApnsPHP_Message_Custom extends ApnsPHP_Message$/;"	c
ApnsPHP_Message_Exception	lib/PushServer/core/ApnsPHP/Message/Exception.php	/^class ApnsPHP_Message_Exception extends ApnsPHP_Exception$/;"	c
ApnsPHP_Push	lib/PushServer/core/ApnsPHP/Push.php	/^class ApnsPHP_Push extends ApnsPHP_Abstract$/;"	c
ApnsPHP_Push_Exception	lib/PushServer/core/ApnsPHP/Push/Exception.php	/^class ApnsPHP_Push_Exception extends ApnsPHP_Exception$/;"	c
ApnsPHP_Push_Server	lib/PushServer/core/ApnsPHP/Push/Server.php	/^class ApnsPHP_Push_Server extends ApnsPHP_Push$/;"	c
ApnsPHP_Push_Server_Exception	lib/PushServer/core/ApnsPHP/Push/Server/Exception.php	/^class ApnsPHP_Push_Server_Exception extends ApnsPHP_Push_Exception$/;"	c
AutoLoader	auto.loader.php	/^    class AutoLoader$/;"	c
AutoLoader	lib/PushServer/auto.loader.php	/^    class AutoLoader$/;"	c
BatchController	lib/PushServer/controller/BatchController.php	/^class BatchController extends Controller$/;"	c
Controller	lib/PushServer/controller/Controller.php	/^class Controller$/;"	c
DS	auto.loader.php	/^defined('DS') || define('DS', DIRECTORY_SEPARATOR);$/;"	d
DS	lib/PushServer/auto.loader.php	/^defined('DS') || define('DS', DIRECTORY_SEPARATOR);$/;"	d
Dao	lib/PushServer/model/dao/Dao.php	/^class Dao$/;"	c
Entity	lib/PushServer/model/entity/Entity.php	/^class Entity extends Model$/;"	c
EventApns	model/apns/EventApns.php	/^class EventApns extends Apns$/;"	c
EventCompetitionEntryEntity	model/entity/EventCompetitionEntryEntity.php	/^class EventCompetitionEntryEntity extends Entity$/;"	c
EventCompetitionEntryTable	model/dao/EventCompetitionEntryTable.php	/^class EventCompetitionEntryTable extends EventDao$/;"	c
EventDao	model/dao/EventDao.php	/^class EventDao extends MySqlDao$/;"	c
EventGcm	model/gcm/EventGcm.php	/^class EventGcm extends Gcm$/;"	c
EventPushServerAutoLoader	auto.loader.php	/^function EventPushServerAutoLoader($class)$/;"	f
FailedEnqueueException	lib/PushServer/model/queue/Exception/FailedEnqueueException.php	/^class FailedEnqueueException extends RedisException$/;"	c
Gcm	lib/PushServer/model/gcm/Gcm.php	/^class Gcm$/;"	c
HttpMethod	model/enum/HttpMethod.php	/^class HttpMethod$/;"	c
HttpRequest	model/HttpRequest.php	/^class HttpRequest$/;"	c
LIB_PUSH_SERVER	lib/PushServer/auto.loader.php	/^defined('LIB_PUSH_SERVER') || define('LIB_PUSH_SERVER', dirname(__FILE__));$/;"	d
LOGGER_OUTPUT	lib/PushServer/core/Logger/Logger.php	/^        defined('LOGGER_OUTPUT') || define('LOGGER_OUTPUT', FALSE);$/;"	d
LastLaunchHistoryTable	model/dao/LastLaunchHistoryTable.php	/^class LastLaunchHistoryTable extends EventDao$/;"	c
LinkOpenType	model/enum/LinkOpenType.php	/^class LinkOpenType$/;"	c
Logger	lib/PushServer/core/Logger/Logger.php	/^class Logger$/;"	c
LoginTable	model/dao/LoginTable.php	/^class LoginTable extends EventDao$/;"	c
Model	lib/PushServer/model/Model.php	/^class Model$/;"	c
MySqlDao	lib/PushServer/model/dao/mysql/MySqlDao.php	/^class MySqlDao extends Dao$/;"	c
MySqlDaoException	lib/PushServer/model/dao/mysql/Exception/MySqlDaoException.php	/^class MySqlDaoException extends PDOException$/;"	c
NotAllowedMethodException	lib/PushServer/model/NotAllowedMethodException.php	/^class NotAllowedMethodException extends RuntimeException$/;"	c
ProfileTable	model/dao/ProfileTable.php	/^class ProfileTable extends EventDao$/;"	c
PushConditioner	model/dao/PushConditioner.php	/^class PushConditioner extends EventDao$/;"	c
PushConditions	model/PushConditions.php	/^class PushConditions extends Model$/;"	c
PushDeliveryRequestBatchController	controller/PushDeliveryRequestBatchController.php	/^class PushDeliveryRequestBatchController extends BatchController$/;"	c
PushEnable	model/enum/PushEnable.php	/^class PushEnable$/;"	c
PushEntity	model/entity/PushEntity.php	/^class PushEntity extends Entity$/;"	c
PushPreparationBatchController	controller/PushPreparationBatchController.php	/^class PushPreparationBatchController extends BatchController$/;"	c
PushQueue	model/queue/PushQueue.php	/^class PushQueue extends RedisQueue$/;"	c
PushReadyQueue	model/queue/PushReadyQueue.php	/^class PushReadyQueue extends PushQueue$/;"	c
PushRedirectController	controller/PushRedirectController.php	/^class PushRedirectController extends RestController$/;"	c
PushRegistrationController	controller/PushRegistrationController.php	/^class PushRegistrationController extends RestController$/;"	c
PushResponseController	controller/PushResponseController.php	/^class PushResponseController extends RestController$/;"	c
PushResponseEntity	model/entity/PushResponseEntity.php	/^class PushResponseEntity extends Entity$/;"	c
PushResponseTable	model/dao/PushResponseTable.php	/^class PushResponseTable extends EventDao$/;"	c
PushSendingQueue	model/queue/PushSendingQueue.php	/^class PushSendingQueue extends PushQueue$/;"	c
PushServerAutoLoader	lib/PushServer/auto.loader.php	/^function PushServerAutoLoader($class)$/;"	f
PushSettingsController	controller/PushSettingsController.php	/^class PushSettingsController extends RestController$/;"	c
PushStartBatchController	controller/PushStartBatchController.php	/^class PushStartBatchController extends BatchController$/;"	c
PushStartQueue	model/queue/PushStartQueue.php	/^class PushStartQueue extends PushQueue$/;"	c
PushState	model/enum/PushState.php	/^class PushState$/;"	c
PushTable	model/dao/PushTable.php	/^class PushTable extends EventDao$/;"	c
PushTestController	controller/PushTestController.php	/^class PushTestController extends BatchController$/;"	c
PushUserEntity	model/entity/PushUserEntity.php	/^class PushUserEntity extends Entity$/;"	c
PushUserPlatform	model/enum/PushUserPlatform.php	/^class PushUserPlatform$/;"	c
PushUserTable	model/dao/PushUserTable.php	/^class PushUserTable extends EventDao$/;"	c
Queue	lib/PushServer/model/queue/Queue.php	/^class Queue$/;"	c
RedisQueue	lib/PushServer/model/queue/redis/RedisQueue.php	/^class RedisQueue extends Queue$/;"	c
RestController	lib/PushServer/controller/RestController.php	/^class RestController extends Controller$/;"	c
UserEntity	model/entity/UserEntity.php	/^class UserEntity extends Entity$/;"	c
UserTable	model/dao/UserTable.php	/^class UserTable extends EventDao$/;"	c
__call	lib/PushServer/model/entity/Entity.php	/^    public function __call($name, $arguments)$/;"	f
__construct	controller/PushDeliveryRequestBatchController.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/controller/BatchController.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/controller/Controller.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/controller/RestController.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function __construct($nEnvironment, $sProviderCertificateFile)$/;"	f
__construct	lib/PushServer/core/ApnsPHP/Message.php	/^	public function __construct($sDeviceToken = null)$/;"	f
__construct	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function __construct($nEnvironment, $sProviderCertificateFile)$/;"	f
__construct	lib/PushServer/model/apns/Apns.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/model/gcm/Gcm.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/model/queue/Queue.php	/^    public function __construct()$/;"	f
__construct	lib/PushServer/model/queue/redis/RedisQueue.php	/^    public function __construct()$/;"	f
__construct	model/PushConditions.php	/^  public function __construct($conditions)$/;"	f
__construct	model/apns/EventApns.php	/^    public function __construct(PushEntity $sendPush)$/;"	f
__construct	model/dao/EventCompetitionEntryTable.php	/^    public function __construct() {$/;"	f
__construct	model/dao/EventDao.php	/^    public function __construct()$/;"	f
__construct	model/dao/LoginTable.php	/^    public function __construct() {$/;"	f
__construct	model/dao/ProfileTable.php	/^    public function __construct() {$/;"	f
__construct	model/dao/PushUserTable.php	/^    function __construct() {$/;"	f
__construct	model/dao/UserTable.php	/^    public function __construct() {$/;"	f
__construct	model/gcm/EventGcm.php	/^    public function __construct(PushEntity $sendPush)$/;"	f
__set	lib/PushServer/model/entity/Entity.php	/^    public function __set($key, $value)$/;"	f
__toString	lib/PushServer/core/ApnsPHP/Message.php	/^	public function __toString()$/;"	f
_aCustomProperties	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_aCustomProperties; \/**< @type mixed Custom properties container. *\/$/;"	v
_aDeviceTokens	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_aDeviceTokens = array(); \/**< @type array Recipients device tokens. *\/$/;"	v
_aErrorResponseMessages	lib/PushServer/core/ApnsPHP/Push.php	/^	protected $_aErrorResponseMessages = array($/;"	v
_aErrors	lib/PushServer/core/ApnsPHP/Push.php	/^			$this->_aErrors = array();$/;"	v
_aErrors	lib/PushServer/core/ApnsPHP/Push.php	/^		$this->_aErrors = array();$/;"	v
_aErrors	lib/PushServer/core/ApnsPHP/Push.php	/^	protected $_aErrors = array(); \/**< @type array Error container. *\/$/;"	v
_aFeedback	lib/PushServer/core/ApnsPHP/Feedback.php	/^		$this->_aFeedback = array();$/;"	v
_aFeedback	lib/PushServer/core/ApnsPHP/Feedback.php	/^	protected $_aFeedback; \/**< @type array Feedback container. *\/$/;"	v
_aLocArgs	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^		$this->_aLocArgs = $aLocArgs;$/;"	v
_aLocArgs	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	protected $_aLocArgs; \/**< @type array Variable string values to appear in place of the format specifiers in loc-key. *\/$/;"	v
_aMessageQueue	lib/PushServer/core/ApnsPHP/Push.php	/^						$this->_aMessageQueue = array();$/;"	v
_aMessageQueue	lib/PushServer/core/ApnsPHP/Push.php	/^					$this->_aMessageQueue = array();$/;"	v
_aMessageQueue	lib/PushServer/core/ApnsPHP/Push.php	/^			$this->_aMessageQueue = array();$/;"	v
_aMessageQueue	lib/PushServer/core/ApnsPHP/Push.php	/^	protected $_aMessageQueue = array(); \/**< @type array Message queue. *\/$/;"	v
_aPids	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected $_aPids = array(); \/**< @type array Array of process PIDs. *\/$/;"	v
_aServiceURLs	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_aServiceURLs = array(); \/**< @type array Container for service URLs environments. *\/$/;"	v
_aServiceURLs	lib/PushServer/core/ApnsPHP/Feedback.php	/^	protected $_aServiceURLs = array($/;"	v
_aServiceURLs	lib/PushServer/core/ApnsPHP/Push.php	/^	protected $_aServiceURLs = array($/;"	v
_bAutoAdjustLongPayload	lib/PushServer/core/ApnsPHP/Message.php	/^		$this->_bAutoAdjustLongPayload = (boolean)$bAutoAdjust;$/;"	v
_bAutoAdjustLongPayload	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_bAutoAdjustLongPayload = true; \/**< @type boolean If the JSON payload is longer than maximum allowed size, shorts message text. *\/$/;"	v
_connect	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected function _connect()$/;"	f
_getBinaryNotification	lib/PushServer/core/ApnsPHP/Push.php	/^	protected function _getBinaryNotification($sDeviceToken, $sPayload, $nMessageID = 0, $nExpire = 604800)$/;"	f
_getPayload	lib/PushServer/core/ApnsPHP/Message.php	/^	protected function _getPayload()$/;"	f
_getPayload	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	protected function _getPayload()$/;"	f
_getQueue	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected function _getQueue($nQueueKey, $nProcess = 0)$/;"	f
_hSem	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$this->_hSem = sem_get(mt_rand());$/;"	v
_hSem	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected $_hSem; \/**< @type resource Semaphore. *\/$/;"	v
_hShm	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$this->_hShm = shm_attach(mt_rand(), self::SHM_SIZE);$/;"	v
_hShm	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected $_hShm; \/**< @type resource Shared memory. *\/$/;"	v
_hSocket	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_hSocket = @stream_socket_client($sURL, $nError, $sError,$/;"	v
_hSocket	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_hSocket; \/**< @type resource SSL Socket. *\/$/;"	v
_log	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected function _log($sMessage)$/;"	f
_logger	lib/PushServer/core/ApnsPHP/Abstract.php	/^			$this->_logger = new ApnsPHP_Log_Embedded();$/;"	v
_logger	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_logger = $logger;$/;"	v
_logger	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_logger; \/**< @type ApnsPHP_Log_Interface Logger. *\/$/;"	v
_mCustomIdentifier	lib/PushServer/core/ApnsPHP/Message.php	/^		$this->_mCustomIdentifier = $mCustomIdentifier;$/;"	v
_mCustomIdentifier	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_mCustomIdentifier; \/**< @type mixed Custom message identifier. *\/$/;"	v
_mainLoop	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected function _mainLoop()$/;"	f
_nBadge	lib/PushServer/core/ApnsPHP/Message.php	/^		$this->_nBadge = $nBadge;$/;"	v
_nBadge	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_nBadge; \/**< @type integer Number to badge the application icon with. *\/$/;"	v
_nConnectRetryInterval	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nConnectRetryInterval = (int)$nRetryInterval;$/;"	v
_nConnectRetryInterval	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nConnectRetryInterval = self::CONNECT_RETRY_INTERVAL;$/;"	v
_nConnectRetryInterval	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_nConnectRetryInterval; \/**< @type integer Connect retry interval in micro seconds. *\/$/;"	v
_nConnectRetryTimes	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nConnectRetryTimes = (int)$nRetryTimes;$/;"	v
_nConnectRetryTimes	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_nConnectRetryTimes = 3; \/**< @type integer Connect retry times. *\/$/;"	v
_nConnectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nConnectTimeout = (int)$nTimeout;$/;"	v
_nConnectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nConnectTimeout = ini_get("default_socket_timeout");$/;"	v
_nConnectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_nConnectTimeout; \/**< @type integer Connect timeout in seconds. *\/$/;"	v
_nCurrentProcess	lib/PushServer/core/ApnsPHP/Push/Server.php	/^			$this->_nCurrentProcess = $i;$/;"	v
_nCurrentProcess	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected $_nCurrentProcess; \/**< @type integer Cardinal process number (0, 1, 2, ...). *\/$/;"	v
_nEnvironment	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nEnvironment = $nEnvironment;$/;"	v
_nEnvironment	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_nEnvironment; \/**< @type integer Active environment. *\/$/;"	v
_nExpiryValue	lib/PushServer/core/ApnsPHP/Message.php	/^		$this->_nExpiryValue = $nExpiryValue;$/;"	v
_nExpiryValue	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_nExpiryValue = 604800; \/**< @type integer That message will expire in 604800 seconds (86400 * 7, 7 days) if not successful delivered. *\/$/;"	v
_nParentPid	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$this->_nParentPid = posix_getpid();$/;"	v
_nParentPid	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected $_nParentPid; \/**< @type integer The parent process id. *\/$/;"	v
_nProcesses	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$this->_nProcesses = $nProcesses;$/;"	v
_nProcesses	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected $_nProcesses = 3; \/**< @type integer The number of processes to start. *\/$/;"	v
_nRunningProcesses	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected $_nRunningProcesses; \/**< @type integer The number of running processes. *\/$/;"	v
_nSendRetryTimes	lib/PushServer/core/ApnsPHP/Push.php	/^		$this->_nSendRetryTimes = (int)$nRetryTimes;$/;"	v
_nSendRetryTimes	lib/PushServer/core/ApnsPHP/Push.php	/^	protected $_nSendRetryTimes = 3; \/**< @type integer Send retry times. *\/$/;"	v
_nSocketSelectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nSocketSelectTimeout = (int)$nSelectTimeout;$/;"	v
_nSocketSelectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_nSocketSelectTimeout = self::SOCKET_SELECT_TIMEOUT;$/;"	v
_nSocketSelectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_nSocketSelectTimeout; \/**< @type integer Socket select timeout in micro seconds. *\/$/;"	v
_parseBinaryTuple	lib/PushServer/core/ApnsPHP/Feedback.php	/^	protected function _parseBinaryTuple($sBinaryTuple)$/;"	f
_parseErrorMessage	lib/PushServer/core/ApnsPHP/Push.php	/^	protected function _parseErrorMessage($sErrorMessage)$/;"	f
_readErrorMessage	lib/PushServer/core/ApnsPHP/Push.php	/^	protected function _readErrorMessage()$/;"	f
_removeMessageFromQueue	lib/PushServer/core/ApnsPHP/Push.php	/^	protected function _removeMessageFromQueue($nMessageID, $bError = false)$/;"	f
_sActionLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^			$aPayload['aps']['alert']['action-loc-key'] = $this->_sActionLocKey == '' ?$/;"	v
_sActionLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^		$this->_sActionLocKey = $sActionLocKey;$/;"	v
_sActionLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	protected $_sActionLocKey; \/**< @type string The "View" button title. *\/$/;"	v
_sLaunchImage	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^		$this->_sLaunchImage = $sLaunchImage;$/;"	v
_sLaunchImage	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	protected $_sLaunchImage; \/**< @type string The filename of an image file in the application bundle. *\/$/;"	v
_sLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^		$this->_sLocKey = $sLocKey;$/;"	v
_sLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	protected $_sLocKey; \/**< @type string A key to an alert-message string in a Localizable.strings file *\/$/;"	v
_sProviderCertificateFile	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_sProviderCertificateFile = $sProviderCertificateFile;$/;"	v
_sProviderCertificateFile	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_sProviderCertificateFile; \/**< @type string Provider certificate file with key (Bundled PEM). *\/$/;"	v
_sRootCertificationAuthorityFile	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$this->_sRootCertificationAuthorityFile = $sRootCertificationAuthorityFile;$/;"	v
_sRootCertificationAuthorityFile	lib/PushServer/core/ApnsPHP/Abstract.php	/^	protected $_sRootCertificationAuthorityFile; \/**< @type string Root certification authority file. *\/$/;"	v
_sSound	lib/PushServer/core/ApnsPHP/Message.php	/^		$this->_sSound = $sSound;$/;"	v
_sSound	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_sSound; \/**< @type string Sound to play. *\/$/;"	v
_sText	lib/PushServer/core/ApnsPHP/Message.php	/^		$this->_sText = $sText;$/;"	v
_sText	lib/PushServer/core/ApnsPHP/Message.php	/^	protected $_sText; \/**< @type string Alert message to display to the user. *\/$/;"	v
_setQueue	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected function _setQueue($nQueueKey, $nProcess = 0, $aQueue = array())$/;"	f
_updateQueue	lib/PushServer/core/ApnsPHP/Push.php	/^	protected function _updateQueue($aErrorMessage = null)$/;"	f
aErrorMessage	lib/PushServer/core/ApnsPHP/Push.php	/^					$aErrorMessage = array($/;"	v
aErrorMessage	lib/PushServer/core/ApnsPHP/Push.php	/^				$aErrorMessage = $aStreamErrorMessage;$/;"	v
aErrorMessage	lib/PushServer/core/ApnsPHP/Push.php	/^				$aErrorMessage = null;$/;"	v
aErrorMessage	lib/PushServer/core/ApnsPHP/Push.php	/^			$aErrorMessage = $aStreamErrorMessage;$/;"	v
aErrorResponse	lib/PushServer/core/ApnsPHP/Push.php	/^		$aErrorResponse = $this->_parseErrorMessage($sErrorResponse);$/;"	v
aFeedback	lib/PushServer/core/ApnsPHP/Feedback.php	/^					$this->_aFeedback[] = $aFeedback = $this->_parseBinaryTuple($sFeedbackTuple);$/;"	v
aKeys	lib/PushServer/core/ApnsPHP/Message.php	/^		$aKeys = array_keys($this->_aCustomProperties);$/;"	v
aPayload	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^		$aPayload = parent::_getPayload();$/;"	v
aQueue	lib/PushServer/core/ApnsPHP/Push/Server.php	/^			$aQueue = $this->_getQueue(self::SHM_MESSAGES_QUEUE_KEY_START, $this->_nCurrentProcess);$/;"	v
aQueue	lib/PushServer/core/ApnsPHP/Push/Server.php	/^			$aQueue = array();$/;"	v
aQueue	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$aQueue = $this->_getQueue(self::SHM_MESSAGES_QUEUE_KEY_START, $n);$/;"	v
aRet	lib/PushServer/core/ApnsPHP/Push.php	/^		$aRet = $this->_aErrors;$/;"	v
aRet	lib/PushServer/core/ApnsPHP/Push.php	/^		$aRet = $this->_aMessageQueue;$/;"	v
aRet	lib/PushServer/core/ApnsPHP/Push/Server.php	/^			$aRet = array_merge($aRet, $this->_getQueue(self::SHM_MESSAGES_QUEUE_KEY_START, $i));$/;"	v
aRet	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$aRet = $this->_getQueue(self::SHM_ERROR_MESSAGES_QUEUE_KEY);$/;"	v
aRet	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$aRet = array();$/;"	v
aStreamErrorMessage	lib/PushServer/core/ApnsPHP/Push.php	/^		$aStreamErrorMessage = $this->_readErrorMessage();$/;"	v
add	lib/PushServer/core/ApnsPHP/Push.php	/^	public function add(ApnsPHP_Message $message)$/;"	f
add	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function add(ApnsPHP_Message $message)$/;"	f
addRecipient	lib/PushServer/core/ApnsPHP/Message.php	/^	public function addRecipient($sDeviceToken)$/;"	f
afterAction	lib/PushServer/controller/Controller.php	/^    protected function afterAction()$/;"	f
afterTime	lib/PushServer/controller/Controller.php	/^        $this->afterTime = microtime(TRUE);$/;"	v
afterTime	lib/PushServer/controller/Controller.php	/^    private $afterTime  = 0;$/;"	v
allUsers	model/PushConditions.php	/^    $allUsers = $this->modelPushUsers->findAllUserIds();$/;"	v
allowMethods	controller/PushRedirectController.php	/^        $this->allowMethods = array($/;"	v
allowMethods	controller/PushRegistrationController.php	/^        $this->allowMethods = array($/;"	v
allowMethods	controller/PushResponseController.php	/^        $this->allowMethods = array($/;"	v
allowMethods	controller/PushSettingsController.php	/^        $this->allowMethods = array($/;"	v
allowMethods	lib/PushServer/controller/RestController.php	/^    protected $allowMethods  = array(HttpMethod::Get, HttpMethod::Post);$/;"	v
apiKey	lib/PushServer/model/gcm/Gcm.php	/^    protected $apiKey  = NULL;$/;"	v
apiKey	model/gcm/EventGcm.php	/^        $this->apiKey = $this->getClientApiKey();$/;"	v
apiKey	model/gcm/EventGcm.php	/^    protected $apiKey   = 'AIzaSyAvBqsw0EFxPVTZVhsjplnn_N9vQFnTcIw';$/;"	v
apiKeys	model/gcm/EventGcm.php	/^        $apiKeys = array($/;"	v
apns	controller/PushDeliveryRequestBatchController.php	/^        $apns = new EventApns($this->sendingPush);$/;"	v
apns	controller/PushTestController.php	/^        $apns = new EventApns($pushEntity);$/;"	v
apnsTokens	controller/PushDeliveryRequestBatchController.php	/^        $apnsTokens = array();$/;"	v
apnsTokens	controller/PushTestController.php	/^    private $apnsTokens    = array('c82d6f937beacab93fc967495367f4be5eaa2b42c46449e73fb5215c84e8edd2');$/;"	v
appVersion	model/entity/UserEntity.php	/^    protected $appVersion = NULL;$/;"	v
auth	lib/PushServer/model/queue/redis/RedisQueue.php	/^        $this->auth = getenv('REDIS_AUTH') ? getenv('REDIS_AUTH') : $this->auth;$/;"	v
auth	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $auth    = NULL;$/;"	v
author	model/entity/PushEntity.php	/^    protected $author              = NULL;$/;"	v
availableForAndroid	model/entity/PushEntity.php	/^    protected $availableForAndroid = NULL;$/;"	v
availableForIOS	model/entity/PushEntity.php	/^    protected $availableForIOS     = NULL;$/;"	v
bConnected	lib/PushServer/core/ApnsPHP/Abstract.php	/^				$bConnected = $this->_connect();$/;"	v
bConnected	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$bConnected = false;$/;"	v
bError	lib/PushServer/core/ApnsPHP/Push.php	/^					$bError = $this->_updateQueue();$/;"	v
bError	lib/PushServer/core/ApnsPHP/Push.php	/^				$bError = $this->_updateQueue($aErrorMessage);$/;"	v
bError	lib/PushServer/core/ApnsPHP/Push.php	/^			$bError = false;$/;"	v
bError	lib/PushServer/core/ApnsPHP/Push.php	/^	protected function _removeMessageFromQueue($nMessageID, $bError = false)$/;"	v
before	lib/PushServer/core/ApnsPHP/Autoload.php	/^ * scripting engine is given a last chance to load the class before PHP$/;"	c
beforeAction	lib/PushServer/controller/Controller.php	/^    protected function beforeAction()$/;"	f
beforeTime	lib/PushServer/controller/Controller.php	/^        $this->beforeTime = microtime(TRUE);$/;"	v
beforeTime	lib/PushServer/controller/Controller.php	/^    private $beforeTime = 0;$/;"	v
block	model/entity/EventCompetitionEntryEntity.php	/^    protected $block                                  = NULL;$/;"	v
blockColor	model/entity/EventCompetitionEntryEntity.php	/^    protected $blockColor                             = NULL;$/;"	v
buildKey	model/queue/PushReadyQueue.php	/^    static public function buildKey(PushEntity $push)$/;"	f
buildKey	model/queue/PushSendingQueue.php	/^    static public function buildKey(PushEntity $push)$/;"	f
buildKey	model/queue/PushStartQueue.php	/^    static public function buildKey(PushEntity $push)$/;"	f
buildMessage	model/gcm/EventGcm.php	/^    private function buildMessage()$/;"	f
buildRequestPayload	lib/PushServer/model/gcm/Gcm.php	/^    private function buildRequestPayload(Array $tokens, $message)$/;"	f
buildUpdateSets	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function buildUpdateSets($data, &$params)$/;"	f
buildUpdateSetsWithArray	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function buildUpdateSetsWithArray(Array $data, &$params)$/;"	f
buildValues	model/queue/PushReadyQueue.php	/^    private function buildValues(PushEntity $push)$/;"	f
buildWhere	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function buildWhere($conditions, &$params = array())$/;"	f
buildWhereWithArray	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function buildWhereWithArray(Array $conditions, &$params, $glue = 'AND')$/;"	f
callStack	lib/PushServer/core/Logger/Logger.php	/^                $callStack = $stack['function'].$seperator.$callStack;$/;"	v
callStack	lib/PushServer/core/Logger/Logger.php	/^            $callStack  = '';$/;"	v
cancel	lib/PushServer/controller/BatchController.php	/^    protected function cancel()$/;"	f
certificate	lib/PushServer/model/apns/Apns.php	/^    protected $certificate     = 'server_cerificates_bundle_sandbox.pem';$/;"	v
certificate	model/apns/EventApns.php	/^                $this->certificate = APP.DS.'certificate'.DS.$client.DS.'aps_production.pem';$/;"	v
certificate	model/apns/EventApns.php	/^            $this->certificate = APP.DS.'certificate'.DS.'event_pro.pem';$/;"	v
certificate	model/apns/EventApns.php	/^        $this->certificate = APP.DS.'certificate'.DS.'event_dev.pem';$/;"	v
ch	lib/PushServer/model/gcm/Gcm.php	/^        $ch = curl_init();$/;"	v
char	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $this->char = getenv('DB_CHAR') ? getenv('DB_CHAR') : $this->char;$/;"	v
char	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $char     = 'utf8mb4';$/;"	v
checkRunningProccess	controller/PushDeliveryRequestBatchController.php	/^    private function checkRunningProccess()$/;"	f
checked_statuses	model/PushConditions.php	/^    $checked_statuses = isset($this->segments->event_competition_checked_status) ? $this->segments->event_competition_checked_status : NULL;$/;"	v
classFileName	auto.loader.php	/^        $classFileName = sprintf('%s.php', $class);$/;"	v
classFileName	lib/PushServer/auto.loader.php	/^        $classFileName = sprintf('%s.php', $class);$/;"	v
classFilePath	auto.loader.php	/^        $classFilePath = AutoLoader::scanfile($includePath, $classFileName);$/;"	v
classFilePath	lib/PushServer/auto.loader.php	/^        $classFilePath = AutoLoader::scanfile($includePath, $classFileName);$/;"	v
client	lib/PushServer/model/queue/redis/RedisQueue.php	/^    static protected function client()$/;"	f
client	model/apns/EventApns.php	/^            $client = getenv('CLIENT') ? getenv('CLIENT') : 'unknown';$/;"	v
client	model/gcm/EventGcm.php	/^        $client = getenv('CLIENT') ? getenv('CLIENT') : 'unknown';$/;"	v
complete	lib/PushServer/controller/BatchController.php	/^    protected function complete()$/;"	f
condition	model/PushConditions.php	/^  private $condition = [$/;"	v
conditions	lib/PushServer/model/dao/mysql/MySqlDao.php	/^            $conditions = (array)$conditions;$/;"	v
conditions	model/dao/LastLaunchHistoryTable.php	/^        $conditions = array();$/;"	v
conditions	model/dao/LoginTable.php	/^        $conditions = array($/;"	v
conditions	model/dao/PushConditioner.php	/^            $conditions = array_merge(array('user_id' => $userIds), $conditions);$/;"	v
conditions	model/dao/PushConditioner.php	/^        $conditions = array($/;"	v
conditions	model/dao/PushResponseTable.php	/^        $conditions = array($/;"	v
conditions	model/dao/PushTable.php	/^        $conditions = array($/;"	v
conditions	model/dao/PushUserTable.php	/^        $conditions = array($/;"	v
conditions	model/dao/UserTable.php	/^        $conditions = array($/;"	v
conditions	model/entity/PushEntity.php	/^    protected $conditions          = NULL;$/;"	v
connect	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function connect()$/;"	f
connectDataBase	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function connectDataBase($dsn)$/;"	f
connectRedis	lib/PushServer/model/queue/redis/RedisQueue.php	/^    private function connectRedis()$/;"	f
content	model/entity/PushEntity.php	/^    protected $content             = NULL;$/;"	v
countByPushId	model/dao/PushResponseTable.php	/^    public function countByPushId($id)$/;"	f
countDeliveryTargetUsers	model/entity/PushEntity.php	/^    public function countDeliveryTargetUsers()$/;"	f
create	lib/PushServer/model/dao/Dao.php	/^    protected function create()$/;"	f
created	model/entity/EventCompetitionEntryEntity.php	/^    protected $created                                = NULL;$/;"	v
created	model/entity/PushEntity.php	/^    protected $created             = NULL;$/;"	v
created	model/entity/PushResponseEntity.php	/^    protected $created    = NULL;$/;"	v
created	model/entity/PushUserEntity.php	/^    protected $created         = NULL;$/;"	v
currentPath	auto.loader.php	/^    $currentPath = dirname(__FILE__);$/;"	v
currentPath	lib/PushServer/auto.loader.php	/^    $currentPath = dirname(__FILE__);$/;"	v
customIdentifier	model/apns/EventApns.php	/^    private function customIdentifier($token)$/;"	f
data	controller/PushDeliveryRequestBatchController.php	/^        $data = array($/;"	v
data	controller/PushPreparationBatchController.php	/^        $data = array($/;"	v
data	lib/PushServer/model/dao/mysql/MySqlDao.php	/^            $data = (array)$data;$/;"	v
data	model/dao/PushTable.php	/^    public function updateState(PushEntity $push, $state, $data = array())$/;"	v
data	model/dao/PushUserTable.php	/^        $data = array($/;"	v
db	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected static $db = NULL;$/;"	v
decodeConditions	model/PushConditions.php	/^    $decodeConditions = json_decode($conditions);$/;"	v
definition	lib/PushServer/core/ApnsPHP/Abstract.php	/^ * ApnsPHP_Abstract class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Exception.php	/^ * ApnsPHP_Exception class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Feedback.php	/^ * ApnsPHP_Feedback class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Log/Embedded.php	/^ * ApnsPHP_Log_Embedded class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Log/Interface.php	/^ * ApnsPHP_Log_Interface interface definition.$/;"	i
definition	lib/PushServer/core/ApnsPHP/Message.php	/^ * ApnsPHP_Message class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^ * ApnsPHP_Message_Custom class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Message/Exception.php	/^ * ApnsPHP_Message_Exception class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Push.php	/^ * ApnsPHP_Push class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Push/Exception.php	/^ * ApnsPHP_Push_Exception class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Push/Server.php	/^ * ApnsPHP_Push_Server class definition.$/;"	c
definition	lib/PushServer/core/ApnsPHP/Push/Server/Exception.php	/^ * ApnsPHP_Push_Server_Exception class definition.$/;"	c
delete	lib/PushServer/model/dao/Dao.php	/^    protected function delete()$/;"	f
delete	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected function delete()$/;"	f
delivery	controller/PushDeliveryRequestBatchController.php	/^    private function delivery()$/;"	f
deliveryTargetUsers	model/entity/PushEntity.php	/^    protected $deliveryTargetUsers = NULL;$/;"	v
deliveryTime	model/entity/PushEntity.php	/^        $this->deliveryTime = date('Y-m-d H:i:s', $timestamp);$/;"	v
deliveryTime	model/entity/PushEntity.php	/^    protected $deliveryTime        = NULL;$/;"	v
deliveryTime	model/queue/PushQueue.php	/^        $deliveryTime = isset($splitKeys[9]) ? $splitKeys[9] : NULL;$/;"	v
deliveryTime	model/queue/PushReadyQueue.php	/^            $deliveryTime = substr($readyPushKey, (strrpos($readyPushKey, '.') + 1));$/;"	v
dequeueAll	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected function dequeueAll()$/;"	f
dir	auto.loader.php	/^                if (is_file($file) && $dir === $filename)$/;"	v
dir	lib/PushServer/auto.loader.php	/^                if (is_file($file) && $dir === $filename)$/;"	v
dirs	auto.loader.php	/^            $dirs = scandir($path);$/;"	v
dirs	lib/PushServer/auto.loader.php	/^            $dirs = scandir($path);$/;"	v
disconnect	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function disconnect()$/;"	f
dsn	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $dsn        = sprintf(self::DSN_FORMAT, $this->name, $this->host, $this->char);$/;"	v
electedNumber	model/entity/EventCompetitionEntryEntity.php	/^    protected $electedNumber                          = NULL;$/;"	v
enqueueAll	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected function enqueueAll(Array $values)$/;"	f
entity	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $entity   = NULL;$/;"	v
entity	model/dao/AllUsersHistoryTable.php	/^    protected $entity = 'AllUsersHistoryEntity';$/;"	v
entity	model/dao/EventCompetitionEntryTable.php	/^    protected $entity = 'EventCompetitionEntryEntity';$/;"	v
entity	model/dao/LastLaunchHistoryTable.php	/^    protected $entity = 'LastLaunchHistoryEntity';$/;"	v
entity	model/dao/LoginTable.php	/^    protected $entity = 'LoginEntity';$/;"	v
entity	model/dao/ProfileTable.php	/^    protected $entity = 'ProfileEntity';$/;"	v
entity	model/dao/PushConditioner.php	/^    protected $entity = 'PushUserEntity';$/;"	v
entity	model/dao/PushResponseTable.php	/^    protected $entity = 'PushResponseEntity';$/;"	v
entity	model/dao/PushTable.php	/^    protected $entity = 'PushEntity';$/;"	v
entity	model/dao/PushUserTable.php	/^    protected $entity = 'PushUserEntity';$/;"	v
entity	model/dao/UserTable.php	/^    protected $entity = 'UserEntity';$/;"	v
environment	lib/PushServer/model/apns/Apns.php	/^    protected $environment     = ApnsPHP_Abstract::ENVIRONMENT_PRODUCTION;$/;"	v
environment	model/apns/EventApns.php	/^            $this->environment = ApnsPHP_Abstract::ENVIRONMENT_PRODUCTION;$/;"	v
environment	model/apns/EventApns.php	/^        $this->environment = ApnsPHP_Abstract::ENVIRONMENT_SANDBOX;$/;"	v
errorTokens	controller/PushDeliveryRequestBatchController.php	/^        $errorTokens   = array();$/;"	v
errorTokens	controller/PushTestController.php	/^    private $errorTokens   = array('apns' => array(), 'gcm' => array());$/;"	v
errors	controller/PushDeliveryRequestBatchController.php	/^        $errors = $apns->getErrors();$/;"	v
errors	controller/PushDeliveryRequestBatchController.php	/^        $errors = $gcm->getErrors();$/;"	v
errors	controller/PushTestController.php	/^        $errors = $apns->getErrors();$/;"	v
errors	controller/PushTestController.php	/^      $errors = $gcm->getErrors();$/;"	v
errors	lib/PushServer/model/apns/Apns.php	/^        $errors = array();$/;"	v
errors	lib/PushServer/model/gcm/Gcm.php	/^    protected $errors  = array();$/;"	v
eventCompetitionEntries	model/dao/EventCompetitionEntryTable.php	/^      $eventCompetitionEntries = $this->query($sql, $params);$/;"	v
eventCompetitionEntryGroupId	model/entity/EventCompetitionEntryEntity.php	/^    protected $eventCompetitionEntryGroupId           = NULL;$/;"	v
eventCompetitionLotteryGroupRelationId	model/entity/EventCompetitionEntryEntity.php	/^    protected $eventCompetitionLotteryGroupRelationId = NULL;$/;"	v
event_competition_id	model/PushConditions.php	/^      $event_competition_id = isset($checked_status->event_competition_id)  ? $checked_status->event_competition_id : NULL;$/;"	v
event_competition_id	model/PushConditions.php	/^      $event_competition_id = isset($lottery_status->event_competition_id)  ? $lottery_status->event_competition_id : NULL;$/;"	v
event_competition_id	model/PushConditions.php	/^    $event_competition_id = isset($this->segments->competition_id)  ? $this->segments->competition_id : NULL;$/;"	v
execute	lib/PushServer/controller/Controller.php	/^    final public function execute()$/;"	f
failed	lib/PushServer/controller/Controller.php	/^    static public function failed($exception)$/;"	f
failedCount	model/entity/PushUserEntity.php	/^    protected $failedCount     = 0;$/;"	v
fetchAllWaitPush	model/dao/PushTable.php	/^    public function fetchAllWaitPush()$/;"	f
fetchById	model/dao/PushTable.php	/^    public function fetchById($id)$/;"	f
fetchByMobileId	model/dao/LoginTable.php	/^    public function fetchByMobileId($mobileId)$/;"	f
fetchByMobileId	model/dao/UserTable.php	/^    public function fetchByMobileId($mobileId)$/;"	f
fetchByPushResponse	model/dao/PushResponseTable.php	/^    public function fetchByPushResponse(PushResponseEntity $pushResponse)$/;"	f
fetchByToken	model/dao/PushUserTable.php	/^    public function fetchByToken($token)$/;"	f
fetchByTokenOrUserId	model/dao/PushUserTable.php	/^    public function fetchByTokenOrUserId($token, $id)$/;"	f
fetchByUserId	model/dao/PushUserTable.php	/^    public function fetchByUserId($id)$/;"	f
fetchUserIdsByAllUsers	model/dao/AllUsersHistoryTable.php	/^    public function fetchUserIdsByAllUsers()$/;"	f
fetchUserIdsByEventCompetitionIdAndTarget	model/dao/EventCompetitionEntryTable.php	/^    public function fetchUserIdsByEventCompetitionIdAndTarget($eventCompetitionId, $target)$/;"	f
fetchUserIdsByLastLaunchTime	model/dao/LastLaunchHistoryTable.php	/^    public function fetchUserIdsByLastLaunchTime($from = NULL, $to = NULL)$/;"	f
fields	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $fields   = array();$/;"	v
fields	model/dao/PushUserTable.php	/^      $this->fields = $fields;$/;"	v
file	auto.loader.php	/^                    $file = AutoLoader::scanfile($file, $filename);$/;"	v
file	auto.loader.php	/^                $file = $path.DS.$dir;$/;"	v
file	lib/PushServer/auto.loader.php	/^                    $file = AutoLoader::scanfile($file, $filename);$/;"	v
file	lib/PushServer/auto.loader.php	/^                $file = $path.DS.$dir;$/;"	v
file	lib/PushServer/controller/Controller.php	/^        $file        = $stackTrace[1]['file'];$/;"	v
filteringUsers	model/PushConditions.php	/^  public function filteringUsers()$/;"	f
filteringUsers	model/dao/PushConditioner.php	/^    public function filteringUsers(PushEntity $push)$/;"	f
filteringUsersByEventCompetitionCheckedStatus	model/PushConditions.php	/^  private function filteringUsersByEventCompetitionCheckedStatus(&$users) {$/;"	f
filteringUsersByEventCompetitionLotteryStatus	model/PushConditions.php	/^  private function filteringUsersByEventCompetitionLotteryStatus(&$users) {$/;"	f
filteringUsersByFavoriteStatus	model/PushConditions.php	/^  private function filteringUsersByFavoriteStatus(&$users) {$/;"	f
filteringUsersByLanguage	model/PushConditions.php	/^  private function filteringUsersByLanguage(&$users) {$/;"	f
filteringUsersByLastLaunchTime	model/PushConditions.php	/^  private function filteringUsersByLastLaunchTime(&$users) {$/;"	f
filteringUsersByLotteryStatus	model/PushConditions.php	/^  private function filteringUsersByLotteryStatus(&$users) {$/;"	f
filteringUsersByMypageStatus	model/PushConditions.php	/^  private function filteringUsersByMypageStatus(&$users) {$/;"	f
filteringUsersByNumberOfElected	model/PushConditions.php	/^  private function filteringUsersByNumberOfElected(&$users) {$/;"	f
filteringUsersByNumberOfRejected	model/PushConditions.php	/^  private function filteringUsersByNumberOfRejected(&$users) {$/;"	f
find	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    public function find($where = NULL)$/;"	f
findAll	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    public function findAll($where = NULL)$/;"	f
findAll	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected function findAll($keyFormat)$/;"	f
findAll	model/queue/PushReadyQueue.php	/^    public function findAll()$/;"	f
findAllUserIds	model/dao/PushUserTable.php	/^    public function findAllUserIds() {$/;"	f
findAllUsers	model/PushConditions.php	/^  private function findAllUsers(&$users) {$/;"	f
findAllUsers	model/dao/PushUserTable.php	/^    public function findAllUsers() {$/;"	f
findUserIdsByEventCompetitionCheckedStatus	model/dao/EventCompetitionEntryTable.php	/^    public function findUserIdsByEventCompetitionCheckedStatus($event_competition_id, $is_checked) {$/;"	f
findUserIdsByEventCompetitionCheckedStatus	model/dao/PushUserTable.php	/^    public function findUserIdsByEventCompetitionCheckedStatus($event_competition_id, $status) {$/;"	f
findUserIdsByEventCompetitionLotteryStatus	model/dao/EventCompetitionEntryTable.php	/^    public function findUserIdsByEventCompetitionLotteryStatus($event_competition_id, $status) {$/;"	f
findUserIdsByLanguage	model/dao/UserTable.php	/^    public function findUserIdsByLanguage($language) {$/;"	f
findUserIdsByLastLaunchTime	model/dao/LoginTable.php	/^    public function findUserIdsByLastLaunchTime($from = NULL, $to = NULL) {$/;"	f
findUserIdsByLotteryStatus	model/dao/PushUserTable.php	/^    public function findUserIdsByLotteryStatus($event_competition_id, $status) {$/;"	f
findUserIdsByMypageStatus	model/dao/ProfileTable.php	/^    public function findUserIdsByMypageStatus($type, $value) {$/;"	f
findUserIdsByMypageStatus	model/dao/PushUserTable.php	/^    public function findUserIdsByMypageStatus($item, $value) {$/;"	f
findUserIdsByNumberOfElected	model/dao/EventCompetitionEntryTable.php	/^    public function findUserIdsByNumberOfElected($from = NULL, $to = NULL) {$/;"	f
findUserIdsByNumberOfElected	model/dao/PushUserTable.php	/^    public function findUserIdsByNumberOfElected($from, $to) {$/;"	f
findUserIdsByNumberOfRejected	model/dao/EventCompetitionEntryTable.php	/^    public function findUserIdsByNumberOfRejected($from = NULL, $to = NULL) {$/;"	f
findUserIdsByNumberOfRejected	model/dao/PushUserTable.php	/^    public function findUserIdsByNumberOfRejected($from, $to) {$/;"	f
forDebug	controller/PushPreparationBatchController.php	/^    private function forDebug() {$/;"	f
from	model/PushConditions.php	/^    $from = isset($this->segments->last_launch_time->from)  ? $this->segments->last_launch_time->from : NULL;$/;"	v
from	model/PushConditions.php	/^    $from = isset($this->segments->number_of_elected->from) ? $this->segments->number_of_elected->from  : NULL;$/;"	v
from	model/PushConditions.php	/^    $from = isset($this->segments->number_of_rejected->from)  ? $this->segments->number_of_rejected->from : NULL;$/;"	v
function	lib/PushServer/controller/Controller.php	/^        $function    = $stackTrace[1]['function'];$/;"	v
gcm	controller/PushDeliveryRequestBatchController.php	/^        $gcm = new EventGcm($this->sendingPush);$/;"	v
gcm	controller/PushTestController.php	/^      $gcm = new EventGcm($pushEntity);$/;"	v
gcmTokens	controller/PushDeliveryRequestBatchController.php	/^        $gcmTokens  = array();$/;"	v
gcmTokens	controller/PushTestController.php	/^    private $gcmTokens     = array('APA91bFmK2vakAL1flYJHuOM3ay9uQPQlE-_GVnVdC7YxU8Ga5z_vPSWWhtfYL3fZIcQnnEKykIST3SjcPGp7KSTXN98E_sS_ZLkt6nDDQac0CuJr6FyLULOwCIJGeec_Eg1WHsWEZ2o-D3LDJ5LLAlCxtDTUkwZ0g');$/;"	v
getActionLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function getActionLocKey()$/;"	f
getAutoAdjustLongPayload	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getAutoAdjustLongPayload()$/;"	f
getBadge	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getBadge()$/;"	f
getCertificateAuthority	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function getCertificateAuthority()$/;"	f
getClientApiKey	model/gcm/EventGcm.php	/^    private function getClientApiKey()$/;"	f
getConditions	model/entity/PushEntity.php	/^    public function getConditions() {$/;"	f
getConnectRetryInterval	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function getConnectRetryInterval()$/;"	f
getConnectRetryTimes	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function getConnectRetryTimes()$/;"	f
getConnectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function getConnectTimeout()$/;"	f
getCustomIdentifier	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getCustomIdentifier()$/;"	f
getCustomProperty	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getCustomProperty($sName)$/;"	f
getCustomPropertyName	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getCustomPropertyName()$/;"	f
getCustomPropertyNames	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getCustomPropertyNames()$/;"	f
getCustomPropertyValue	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getCustomPropertyValue()$/;"	f
getDeliveryTimeSince1970	model/entity/PushEntity.php	/^    public function getDeliveryTimeSince1970()$/;"	f
getDeliveryTimeWithFormat	model/entity/PushEntity.php	/^    public function getDeliveryTimeWithFormat($format)$/;"	f
getErrors	lib/PushServer/core/ApnsPHP/Push.php	/^	public function getErrors($bEmpty = true)$/;"	f
getErrors	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function getErrors($bEmpty = true)$/;"	f
getErrors	lib/PushServer/model/apns/Apns.php	/^    public function getErrors()$/;"	f
getErrors	lib/PushServer/model/gcm/Gcm.php	/^    public function getErrors()$/;"	f
getExpiry	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getExpiry()$/;"	f
getFields	model/dao/PushUserTable.php	/^    public function getFields() {$/;"	f
getLaunchImage	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function getLaunchImage()$/;"	f
getLocArgs	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function getLocArgs()$/;"	f
getLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function getLocKey()$/;"	f
getLogger	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function getLogger()$/;"	f
getParam	model/HttpRequest.php	/^    public static function getParam($name)$/;"	f
getPayload	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getPayload()$/;"	f
getQueue	lib/PushServer/core/ApnsPHP/Push.php	/^	public function getQueue($bEmpty = true)$/;"	f
getQueue	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function getQueue($bEmpty = true)$/;"	f
getRecipient	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getRecipient($nRecipient = 0)$/;"	f
getRecipients	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getRecipients()$/;"	f
getRecipientsNumber	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getRecipientsNumber()$/;"	f
getSendRetryTimes	lib/PushServer/core/ApnsPHP/Push.php	/^	public function getSendRetryTimes()$/;"	f
getSocketSelectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function getSocketSelectTimeout()$/;"	f
getSound	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getSound()$/;"	f
getStartPush	model/queue/PushStartQueue.php	/^    public function getStartPush()$/;"	f
getTargetWithLimit	model/queue/PushSendingQueue.php	/^    public function getTargetWithLimit(PushEntity $push, $limit)$/;"	f
getTargets	controller/PushDeliveryRequestBatchController.php	/^    private function getTargets()$/;"	f
getText	lib/PushServer/core/ApnsPHP/Message.php	/^	public function getText()$/;"	f
glue	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function buildWhereWithArray(Array $conditions, &$params, $glue = 'AND')$/;"	v
handleResponse	lib/PushServer/model/gcm/Gcm.php	/^    private function handleResponse($response, $tokens)$/;"	f
hasLink	model/entity/PushEntity.php	/^    public function hasLink()$/;"	f
headers	lib/PushServer/model/gcm/Gcm.php	/^        $this->headers = array($/;"	v
headers	lib/PushServer/model/gcm/Gcm.php	/^    protected $headers = array();$/;"	v
host	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $this->host = getenv('DB_HOST') ? getenv('DB_HOST') : $this->host;$/;"	v
host	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $host     = '127.0.0.1';$/;"	v
host	lib/PushServer/model/queue/redis/RedisQueue.php	/^        $this->host = getenv('REDIS_HOST') ? getenv('REDIS_HOST') : $this->host;$/;"	v
host	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $host    = '127.0.0.1';$/;"	v
httpStatusCode	lib/PushServer/model/gcm/Gcm.php	/^        $httpStatusCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);$/;"	v
id	controller/PushRedirectController.php	/^        $id = HttpRequest::getParam('link');$/;"	v
id	model/dao/PushUserTable.php	/^        $id = $pushUser->getId();$/;"	v
id	model/entity/EventCompetitionEntryEntity.php	/^    protected $id                                     = NULL;$/;"	v
id	model/entity/PushEntity.php	/^    protected $id                  = NULL;$/;"	v
id	model/entity/PushResponseEntity.php	/^    protected $id         = NULL;$/;"	v
id	model/entity/PushUserEntity.php	/^    protected $id              = NULL;$/;"	v
id	model/entity/UserEntity.php	/^    protected $id         = NULL;$/;"	v
includePaths	auto.loader.php	/^    $includePaths = array($/;"	v
includePaths	lib/PushServer/auto.loader.php	/^    $includePaths = array($/;"	v
index	lib/PushServer/model/gcm/Gcm.php	/^        foreach ($responseData->results as $index => $result)$/;"	v
insert	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    public function insert($data)$/;"	f
is	lib/PushServer/core/ApnsPHP/Abstract.php	/^ * This class is responsible for the connection to the Apple Push Notification Service$/;"	c
is	lib/PushServer/core/ApnsPHP/Autoload.php	/^ * This function is automatically called in case you are trying to use a$/;"	f
is	lib/PushServer/core/ApnsPHP/Push/Server.php	/^ * queue. This class is useful to parallelize and speed-up send activities to Apple$/;"	c
isPushEnable	controller/PushSettingsController.php	/^        $isPushEnable = ('true' === HttpRequest::getParam('enable')) ? 'yes' : 'no';$/;"	v
isTargetForApns	model/entity/PushEntity.php	/^    public function isTargetForApns()$/;"	f
isTargetForGcm	model/entity/PushEntity.php	/^    public function isTargetForGcm()$/;"	f
isValidAccess	controller/PushRedirectController.php	/^    protected function isValidAccess()$/;"	f
isValidAccess	controller/PushRegistrationController.php	/^    protected function isValidAccess()$/;"	f
isValidAccess	controller/PushResponseController.php	/^    protected function isValidAccess()$/;"	f
isValidAccess	controller/PushSettingsController.php	/^    protected function isValidAccess()$/;"	f
isValidAccess	lib/PushServer/controller/RestController.php	/^    protected function isValidAccess()$/;"	f
is_checked	model/PushConditions.php	/^      $is_checked           = isset($checked_status->is_checked)            ? $checked_status->is_checked           : NULL;$/;"	v
item	model/PushConditions.php	/^      $item   = isset($mypage->item)  ? $mypage->item   : NULL;$/;"	v
k	lib/PushServer/core/ApnsPHP/Push.php	/^			foreach($this->_aMessageQueue as $k => &$aMessage) {$/;"	v
k	lib/PushServer/core/ApnsPHP/Push.php	/^		foreach($this->_aMessageQueue as $k => &$aMessage) {$/;"	v
key	controller/PushDeliveryRequestBatchController.php	/^            $key = array_search($token, $successTokens);$/;"	v
key	controller/PushTestController.php	/^            $key = array_search($token, $this->successTokens['apns']);$/;"	v
key	controller/PushTestController.php	/^        $key = array_search($token, $this->successTokens['gcm']);$/;"	v
key	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        foreach ($conditions as $key => $value)$/;"	v
key	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        foreach ($data as $key => $value)$/;"	v
key	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $key   = NULL;$/;"	v
key	model/PushConditions.php	/^    foreach ($checked_statuses as $key => $checked_status) {$/;"	v
key	model/PushConditions.php	/^    foreach ($lottery_statuses as $key => $lottery_status) {$/;"	v
key	model/PushConditions.php	/^    foreach ($mypages as $key => $mypage) {$/;"	v
key	model/queue/PushReadyQueue.php	/^        $this->key = self::buildKey($push);$/;"	v
key	model/queue/PushSendingQueue.php	/^        $this->key = self::buildKey($push);$/;"	v
key	model/queue/PushStartQueue.php	/^        $this->key = self::buildKey($push);$/;"	v
keys	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $keys         = array_keys($data);$/;"	v
keys	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $keys = array_keys($data);$/;"	v
language	model/PushConditions.php	/^    $language = isset($this->segments->language) ? $this->segments->language : NULL;$/;"	v
length	lib/PushServer/model/queue/redis/RedisQueue.php	/^            $length = self::$redis->lpush($this->key, $value);$/;"	v
length	lib/PushServer/model/queue/redis/RedisQueue.php	/^        $length = self::$redis->lSize($this->key);$/;"	v
length	model/queue/PushSendingQueue.php	/^        $length = ($length > $limit) ? $limit : $length;$/;"	v
length	model/queue/PushSendingQueue.php	/^        $length = self::$redis->lSize($this->key);$/;"	v
line	lib/PushServer/controller/Controller.php	/^        $line        = $stackTrace[1]['line'];$/;"	v
link	model/entity/PushEntity.php	/^    protected $link                = NULL;$/;"	v
linkOpenType	model/entity/PushEntity.php	/^    protected $linkOpenType        = LinkOpenType::Internal;$/;"	v
loadAllToken	controller/PushPreparationBatchController.php	/^    private function loadAllToken()$/;"	f
loadWaitData	controller/PushPreparationBatchController.php	/^    private function loadWaitData()$/;"	f
loadWithLimit	model/queue/PushSendingQueue.php	/^    protected function loadWithLimit($limit)$/;"	f
log	auto.loader.php	/^        static public function log($message = '', $method = '')$/;"	f
log	lib/PushServer/auto.loader.php	/^        static public function log($message = '', $method = '')$/;"	f
log	lib/PushServer/controller/BatchController.php	/^    protected function log()$/;"	f
log	lib/PushServer/controller/Controller.php	/^    protected function log()$/;"	f
log	lib/PushServer/core/ApnsPHP/Log/Embedded.php	/^	public function log($sMessage)$/;"	f
log	lib/PushServer/core/ApnsPHP/Log/Interface.php	/^	public function log($sMessage);$/;"	f
log	lib/PushServer/core/Logger/Logger.php	/^    static final public function log($message = '')$/;"	f
lotteryTarget	model/entity/EventCompetitionEntryEntity.php	/^    protected $lotteryTarget                          = NULL;$/;"	v
lottery_statuses	model/PushConditions.php	/^    $lottery_statuses = isset($this->segments->event_competition_lottery_status) ? $this->segments->event_competition_checked_status : NULL;$/;"	v
main	controller/PushDeliveryRequestBatchController.php	/^    public function main()$/;"	f
main	controller/PushPreparationBatchController.php	/^    public function main()$/;"	f
main	controller/PushRedirectController.php	/^    public function main()$/;"	f
main	controller/PushRegistrationController.php	/^    public function main()$/;"	f
main	controller/PushResponseController.php	/^    public function main()$/;"	f
main	controller/PushSettingsController.php	/^    public function main()$/;"	f
main	controller/PushStartBatchController.php	/^    public function main()$/;"	f
main	controller/PushTestController.php	/^    public function main()$/;"	f
main	lib/PushServer/controller/Controller.php	/^    protected function main() {}$/;"	f
manages	lib/PushServer/core/ApnsPHP/Push.php	/^ * The class manages a message queue and sends notifications payload to Apple Push$/;"	c
manages	lib/PushServer/core/ApnsPHP/Push/Server.php	/^ * The class manages multiple Push Notification Providers and an inter-process message$/;"	c
maxProcess	controller/PushDeliveryRequestBatchController.php	/^        $this->maxProcess = getenv('MAX_PROCESS') ? getenv('MAX_PROCESS') : $this->maxProcess;$/;"	v
maxProcess	controller/PushDeliveryRequestBatchController.php	/^    private $maxProcess  = 40;$/;"	v
maxTargets	controller/PushDeliveryRequestBatchController.php	/^    private $maxTargets  = 400000;$/;"	v
message	lib/PushServer/controller/Controller.php	/^        $message = sprintf('%sUnCatched Exception !!!!!!%s%s', PHP_EOL, PHP_EOL, $exception);$/;"	v
message	lib/PushServer/core/ApnsPHP/Push.php	/^				$message = $aMessage['MESSAGE'];$/;"	v
message	model/apns/EventApns.php	/^            $message = new ApnsPHP_Message($token);$/;"	v
message	model/gcm/EventGcm.php	/^        $message = $this->buildMessage();$/;"	v
message	model/gcm/EventGcm.php	/^        $message = array($/;"	v
messageId	lib/PushServer/model/apns/Apns.php	/^        foreach ($this->push->getErrors() as $messageId => $error)$/;"	v
method	auto.loader.php	/^        static public function log($message = '', $method = '')$/;"	v
method	lib/PushServer/auto.loader.php	/^        static public function log($message = '', $method = '')$/;"	v
method	model/HttpRequest.php	/^    public static function method()$/;"	f
mobileId	model/entity/UserEntity.php	/^    protected $mobileId   = NULL;$/;"	v
modelEventCompetitionEntries	model/PushConditions.php	/^    $this->modelEventCompetitionEntries = new EventCompetitionEntryTable();$/;"	v
modelEventCompetitionEntries	model/PushConditions.php	/^  private $modelEventCompetitionEntries = NULL;$/;"	v
modelLogins	model/PushConditions.php	/^    $this->modelLogins = new LoginTable();$/;"	v
modelLogins	model/PushConditions.php	/^  private $modelLogins = NULL;$/;"	v
modelProfiles	model/PushConditions.php	/^    $this->modelProfiles = new ProfileTable();$/;"	v
modelProfiles	model/PushConditions.php	/^  private $modelProfiles = NULL;$/;"	v
modelPushUsers	model/PushConditions.php	/^    $this->modelPushUsers = new PushUserTable();$/;"	v
modelPushUsers	model/PushConditions.php	/^  private $modelPushUsers = NULL;$/;"	v
modelUsers	model/PushConditions.php	/^    $this->modelUsers = new UserTable();$/;"	v
modelUsers	model/PushConditions.php	/^  private $modelUsers = NULL;$/;"	v
modified	model/entity/EventCompetitionEntryEntity.php	/^    protected $modified                               = NULL;$/;"	v
modified	model/entity/PushEntity.php	/^    protected $modified            = NULL;$/;"	v
modified	model/entity/PushResponseEntity.php	/^    protected $modified   = NULL;$/;"	v
modified	model/entity/PushUserEntity.php	/^    protected $modified        = NULL;$/;"	v
modifier	model/entity/PushEntity.php	/^    protected $modifier            = NULL;$/;"	v
modifyTokenFromCanonicalId	model/dao/PushUserTable.php	/^    public function modifyTokenFromCanonicalId($oldToken, $newToken)$/;"	f
mypages	model/PushConditions.php	/^    $mypages = isset($this->segments->mypage) ? $this->segments->mypage : NULL;$/;"	v
n	controller/PushDeliveryRequestBatchController.php	/^        $n = exec('ps aux | grep push.delivery.request.batch.php | grep -v grep | wc -l');$/;"	v
n	lib/PushServer/core/ApnsPHP/Push/Server.php	/^			$n = 0;$/;"	v
n	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		static $n = 0;$/;"	v
nBufferLen	lib/PushServer/core/ApnsPHP/Feedback.php	/^			$nBufferLen = strlen($sBuffer);$/;"	v
nChangedStreams	lib/PushServer/core/ApnsPHP/Feedback.php	/^			$nChangedStreams = stream_select($read, $null, $null, 0, $this->_nSocketSelectTimeout);$/;"	v
nChangedStreams	lib/PushServer/core/ApnsPHP/Push.php	/^				$nChangedStreams = @stream_select($read, $null, $null, 0, $this->_nSocketSelectTimeout);$/;"	v
nCurrBufferLen	lib/PushServer/core/ApnsPHP/Feedback.php	/^			$nCurrBufferLen = strlen($sCurrBuffer);$/;"	v
nErrors	lib/PushServer/core/ApnsPHP/Push.php	/^				$nErrors = 0;$/;"	v
nFeedbackTupleLen	lib/PushServer/core/ApnsPHP/Feedback.php	/^		$nFeedbackTupleLen = self::TIME_BINARY_SIZE + self::TOKEN_LENGTH_BINARY_SIZE + self::DEVICE_BINARY_SIZE;$/;"	v
nFeedbackTuples	lib/PushServer/core/ApnsPHP/Feedback.php	/^				$nFeedbackTuples = floor($nBufferLen \/ $nFeedbackTupleLen);$/;"	v
nJSONPayloadLen	lib/PushServer/core/ApnsPHP/Message.php	/^		$nJSONPayloadLen = strlen($sJSONPayload);$/;"	v
nLen	lib/PushServer/core/ApnsPHP/Push.php	/^				$nLen = strlen($aMessage['BINARY_NOTIFICATION']);$/;"	v
nMaxTextLen	lib/PushServer/core/ApnsPHP/Message.php	/^				$nMaxTextLen = $nTextLen = strlen($this->_sText) - ($nJSONPayloadLen - self::PAYLOAD_MAXIMUM_SIZE);$/;"	v
nMessageID	lib/PushServer/core/ApnsPHP/Push.php	/^			$nMessageID = $nMessageQueueLen + $i + 1;$/;"	v
nMessageID	lib/PushServer/core/ApnsPHP/Push.php	/^	protected function _getBinaryNotification($sDeviceToken, $sPayload, $nMessageID = 0, $nExpire = 604800)$/;"	v
nMessageQueueLen	lib/PushServer/core/ApnsPHP/Push.php	/^		$nMessageQueueLen = count($this->_aMessageQueue);$/;"	v
nMessages	lib/PushServer/core/ApnsPHP/Push/Server.php	/^			$nMessages = count($aQueue);$/;"	v
nPayloadLength	lib/PushServer/core/ApnsPHP/Push.php	/^		$nPayloadLength = strlen($sPayload);$/;"	v
nPid	lib/PushServer/core/ApnsPHP/Push/Server.php	/^			$this->_aPids[$i] = $nPid = pcntl_fork();$/;"	v
nProcess	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected function _getQueue($nQueueKey, $nProcess = 0)$/;"	v
nProcess	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	protected function _setQueue($nQueueKey, $nProcess = 0, $aQueue = array())$/;"	v
nProcesses	lib/PushServer/core/ApnsPHP/Push/Server.php	/^		$nProcesses = (int)$nProcesses;$/;"	v
nRecipients	lib/PushServer/core/ApnsPHP/Push.php	/^		$nRecipients = $message->getRecipientsNumber();$/;"	v
nRetry	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$nRetry = 0;$/;"	v
nRun	lib/PushServer/core/ApnsPHP/Push.php	/^		$nRun = 1;$/;"	v
nTokenLength	lib/PushServer/core/ApnsPHP/Push.php	/^		$nTokenLength = strlen($sDeviceToken);$/;"	v
name	lib/PushServer/core/ApnsPHP/Autoload.php	/^ *         file does not exists or file was loaded but class name was not found.$/;"	c
name	lib/PushServer/core/ApnsPHP/Autoload.php	/^ * @param  $sClassName @type string The class name.$/;"	c
name	lib/PushServer/core/ApnsPHP/Autoload.php	/^ * @throws Exception if class name is empty, the current path is empty or class$/;"	c
name	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $this->name = getenv('DB_NAME') ? getenv('DB_NAME') : $this->name;$/;"	v
name	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $name     = 'test';$/;"	v
newToken	lib/PushServer/model/gcm/Gcm.php	/^                $newToken = $result->registration_id;$/;"	v
null	lib/PushServer/core/ApnsPHP/Feedback.php	/^			$null = NULL;$/;"	v
null	lib/PushServer/core/ApnsPHP/Push.php	/^				$null = NULL;$/;"	v
oldToken	lib/PushServer/model/gcm/Gcm.php	/^                $oldToken = $tokens[$index];$/;"	v
onChildExited	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function onChildExited()$/;"	f
onShutdown	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function onShutdown()$/;"	f
onSignal	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function onSignal($nSignal)$/;"	f
originalFields	model/dao/PushUserTable.php	/^      $originalFields = $this->getFields();$/;"	v
osVersion	model/entity/UserEntity.php	/^    protected $osVersion  = NULL;$/;"	v
output	lib/PushServer/core/Logger/Logger.php	/^    static private function output($message)$/;"	f
params	lib/PushServer/controller/RestController.php	/^    protected $params        = array();$/;"	v
params	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $params       = array();$/;"	v
params	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $params = NULL;$/;"	v
params	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $params = array();$/;"	v
params	model/dao/EventCompetitionEntryTable.php	/^      $params = array($/;"	v
params	model/dao/LastLaunchHistoryTable.php	/^        $params     = array();$/;"	v
pass	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $this->pass = getenv('DB_PASS') ? getenv('DB_PASS') : $this->pass;$/;"	v
pass	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $pass     = NULL;$/;"	v
payload	lib/PushServer/model/gcm/Gcm.php	/^        $payload = array($/;"	v
pdoStatement	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $pdoStatement = self::$db->prepare('SET SESSION time_zone = ?');$/;"	v
pdoStatement	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	model/dao/AllUsersHistoryTable.php	/^        $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	model/dao/EventCompetitionEntryTable.php	/^      $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	model/dao/EventDao.php	/^        $pdoStatement = self::$db->query($query);$/;"	v
pdoStatement	model/dao/LastLaunchHistoryTable.php	/^        $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	model/dao/LoginTable.php	/^      $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	model/dao/ProfileTable.php	/^      $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	model/dao/PushResponseTable.php	/^        $pdoStatement = self::$db->prepare(sprintf('SELECT COUNT(`id`) FROM `%s`.`%s` WHERE `push_id` = ?', $this->name, $this->table));$/;"	v
pdoStatement	model/dao/PushUserTable.php	/^      $pdoStatement = self::$db->prepare($sql);$/;"	v
pdoStatement	model/dao/UserTable.php	/^      $pdoStatement = self::$db->prepare($sql);$/;"	v
placeholders	lib/PushServer/model/dao/mysql/MySqlDao.php	/^                $placeholders = array();$/;"	v
placeholders	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $placeholders = array();$/;"	v
platform	controller/PushDeliveryRequestBatchController.php	/^        	$platform = $target->getPlatform();$/;"	v
platform	model/entity/PushUserEntity.php	/^    protected $platform        = NULL;$/;"	v
platformVersion	model/entity/PushUserEntity.php	/^    protected $platformVersion = NULL;$/;"	v
port	lib/PushServer/model/queue/redis/RedisQueue.php	/^        $this->port = getenv('REDIS_PORT') ? getenv('REDIS_PORT') : $this->port;$/;"	v
port	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $port    = '6379';$/;"	v
processTime	lib/PushServer/controller/Controller.php	/^        $processTime = $this->afterTime - $this->beforeTime;$/;"	v
properties	model/entity/PushResponseEntity.php	/^        $properties = parent::toArray();$/;"	v
properties	model/entity/PushUserEntity.php	/^        $properties = parent::toArray();$/;"	v
property	lib/PushServer/model/entity/Entity.php	/^            $property = lcFirst(substr($name, 3));$/;"	v
property	lib/PushServer/model/entity/Entity.php	/^        $property = $this->propertyKey($key);$/;"	v
property	lib/PushServer/model/entity/Entity.php	/^        $property = lcFirst(str_replace(' ', '', $property));$/;"	v
property	lib/PushServer/model/entity/Entity.php	/^        $property = ucWords(str_replace('_', ' ', $property));$/;"	v
propertyKey	lib/PushServer/model/entity/Entity.php	/^    private function propertyKey($property)$/;"	f
propertyMap	lib/PushServer/model/entity/Entity.php	/^    protected $propertyMap = array();$/;"	v
propertyMap	model/entity/EventCompetitionEntryEntity.php	/^    protected $propertyMap = array($/;"	v
propertyMap	model/entity/PushEntity.php	/^    protected $propertyMap = array($/;"	v
propertyMap	model/entity/PushResponseEntity.php	/^    protected $propertyMap = array();$/;"	v
propertyMap	model/entity/PushUserEntity.php	/^    protected $propertyMap = array($/;"	v
purge	model/queue/PushReadyQueue.php	/^    public function purge(PushEntity $push)$/;"	f
push	controller/PushDeliveryRequestBatchController.php	/^        $push = $pushStartQueue->getStartPush();$/;"	v
push	controller/PushRedirectController.php	/^        $push      = $pushTable->find(array('id' => $id));$/;"	v
push	controller/PushResponseController.php	/^        $push = $pushTable->fetchById($pushId);$/;"	v
push	lib/PushServer/model/apns/Apns.php	/^        $this->push = new ApnsPHP_Push($/;"	v
push	lib/PushServer/model/apns/Apns.php	/^    protected $push            = NULL;$/;"	v
pushConditioner	controller/PushPreparationBatchController.php	/^        $pushConditioner = new PushConditioner();$/;"	v
pushConditions	controller/PushPreparationBatchController.php	/^      $pushConditions = new PushConditions();$/;"	v
pushConditions	model/dao/PushConditioner.php	/^        $pushConditions = new PushConditions($push->getConditions());$/;"	v
pushEnable	model/entity/PushUserEntity.php	/^        $this->pushEnable = $pushEnable;$/;"	v
pushEnable	model/entity/PushUserEntity.php	/^    protected $pushEnable      = PushEnable::Enable;$/;"	v
pushEntity	controller/PushTestController.php	/^        $pushEntity = new PushEntity();$/;"	v
pushEntity	controller/PushTestController.php	/^      $pushEntity = new PushEntity();$/;"	v
pushEntity	model/queue/PushQueue.php	/^        $pushEntity = new PushEntity();$/;"	v
pushId	controller/PushResponseController.php	/^        $pushId = HttpRequest::getParam('id');$/;"	v
pushId	controller/PushTestController.php	/^    private $pushId        = 1;$/;"	v
pushId	model/entity/PushResponseEntity.php	/^    protected $pushId     = NULL;$/;"	v
pushId	model/queue/PushQueue.php	/^        $pushId       = isset($splitKeys[7]) ? $splitKeys[7] : NULL;$/;"	v
pushReadyQueue	controller/PushPreparationBatchController.php	/^        $pushReadyQueue = new PushReadyQueue();$/;"	v
pushReadyQueue	controller/PushStartBatchController.php	/^        $pushReadyQueue = new PushReadyQueue();$/;"	v
pushResponse	controller/PushResponseController.php	/^        $pushResponse = new PushResponseEntity();$/;"	v
pushResponseTable	controller/PushResponseController.php	/^        $pushResponseTable = new PushResponseTable();$/;"	v
pushSendingQueue	controller/PushDeliveryRequestBatchController.php	/^        $pushSendingQueue = new PushSendingQueue();$/;"	v
pushStartQueue	controller/PushDeliveryRequestBatchController.php	/^        $pushStartQueue = new PushStartQueue();$/;"	v
pushStartQueue	controller/PushStartBatchController.php	/^        $pushStartQueue = new PushStartQueue();$/;"	v
pushTable	controller/PushDeliveryRequestBatchController.php	/^        $pushTable = new PushTable();$/;"	v
pushTable	controller/PushPreparationBatchController.php	/^            $pushTable = new PushTable();$/;"	v
pushTable	controller/PushPreparationBatchController.php	/^        $pushTable = new PushTable();$/;"	v
pushTable	controller/PushRedirectController.php	/^        $pushTable = new PushTable();$/;"	v
pushTable	controller/PushResponseController.php	/^        $pushTable = new PushTable();$/;"	v
pushTable	controller/PushStartBatchController.php	/^        $pushTable = new PushTable();$/;"	v
pushUser	controller/PushRegistrationController.php	/^            $pushUser = new PushUserEntity();$/;"	v
pushUser	controller/PushRegistrationController.php	/^        $pushUser = $pushUserTable->fetchByTokenOrUserId($token, $user->getId());$/;"	v
pushUser	controller/PushResponseController.php	/^        $pushUser = $pushUserTable->fetchByToken($token);$/;"	v
pushUser	controller/PushSettingsController.php	/^        $pushUser = $pushUserTable->fetchByToken($this->tokenFilter(HttpRequest::getParam('token')));$/;"	v
pushUser	model/dao/PushUserTable.php	/^        $pushUser = $this->fetchByToken($newToken);$/;"	v
pushUser	model/dao/PushUserTable.php	/^        $pushUser = $this->fetchByToken($oldToken);$/;"	v
pushUserId	model/entity/PushResponseEntity.php	/^    protected $pushUserId = NULL;$/;"	v
pushUserTable	controller/PushDeliveryRequestBatchController.php	/^        $pushUserTable = new PushUserTable();$/;"	v
pushUserTable	controller/PushRegistrationController.php	/^        $pushUserTable = new PushUserTable();$/;"	v
pushUserTable	controller/PushResponseController.php	/^        $pushUserTable = new PushUserTable();$/;"	v
pushUserTable	controller/PushSettingsController.php	/^        $pushUserTable = new PushUserTable();$/;"	v
pushUserTable	lib/PushServer/model/gcm/Gcm.php	/^                $pushUserTable = new PushUserTable();$/;"	v
query	lib/PushServer/model/dao/mysql/MySqlDao.php	/^  public function query($sql, $params)$/;"	f
query	model/dao/EventDao.php	/^        $query = sprintf('DESCRIBE `%s`.`%s`', $this->name, $this->table);$/;"	v
rate	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $rate     = 1;$/;"	v
rate	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $rate    = 1;$/;"	v
rate	model/dao/EventDao.php	/^    protected $rate    = 1;$/;"	v
read	lib/PushServer/core/ApnsPHP/Feedback.php	/^			$read = array($this->_hSocket);$/;"	v
read	lib/PushServer/core/ApnsPHP/Push.php	/^				$read = array($this->_hSocket);$/;"	v
ready	model/queue/PushReadyQueue.php	/^    public function ready(PushEntity $push)$/;"	f
readyPush	model/queue/PushReadyQueue.php	/^            $readyPush = $this->restorationPushEntityByKey($readyPushKey);$/;"	v
readyPushKeys	model/queue/PushReadyQueue.php	/^        $readyPushKeys = parent::findAll($searchKeyFormat);$/;"	v
readyPushs	controller/PushStartBatchController.php	/^        $readyPushs     = $pushReadyQueue->findAll();$/;"	v
readyPushs	controller/PushStartBatchController.php	/^        $this->readyPushs = $readyPushs;$/;"	v
readyPushs	controller/PushStartBatchController.php	/^    private $readyPushs = array();$/;"	v
readyPushs	model/queue/PushReadyQueue.php	/^        $readyPushs = array();$/;"	v
readyToStart	controller/PushStartBatchController.php	/^    private function readyToStart()$/;"	f
receive	lib/PushServer/core/ApnsPHP/Feedback.php	/^	public function receive()$/;"	f
redirect	controller/PushRedirectController.php	/^    private function redirect()$/;"	f
redis	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected static $redis = NULL;$/;"	v
registToken	controller/PushRegistrationController.php	/^    private function registToken()$/;"	f
rename	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected function rename($oldKey, $newKey)$/;"	f
reportResult	controller/PushTestController.php	/^    private function reportResult()$/;"	f
represents	lib/PushServer/core/ApnsPHP/Message.php	/^ * The class represents a message to be delivered to an end user device.$/;"	c
represents	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^ * The class represents a custom message to be delivered to an end user device.$/;"	c
request	model/apns/EventApns.php	/^    public function request(Array $tokens)$/;"	f
request	model/gcm/EventGcm.php	/^    public function request(Array $tokens)$/;"	f
requestApns	controller/PushDeliveryRequestBatchController.php	/^    private function requestApns($apnsTokens, &$successTokens, &$errorTokens)$/;"	f
requestApns	controller/PushTestController.php	/^    private function requestApns()$/;"	f
requestBySessionTokens	model/apns/EventApns.php	/^    private function requestBySessionTokens($sessionTokens)$/;"	f
requestGcm	controller/PushDeliveryRequestBatchController.php	/^    private function requestGcm($gcmTokens, &$successTokens, &$errorTokens)$/;"	f
requestGcm	controller/PushTestController.php	/^    private function requestGcm()$/;"	f
requireParams	controller/PushRedirectController.php	/^        $this->requireParams = array($/;"	v
requireParams	controller/PushRegistrationController.php	/^        $this->requireParams = array($/;"	v
requireParams	controller/PushResponseController.php	/^        $this->requireParams = array($/;"	v
requireParams	controller/PushSettingsController.php	/^        $this->requireParams = array($/;"	v
requireParams	lib/PushServer/controller/RestController.php	/^    protected $requireParams = array();$/;"	v
resetErrorCount	model/dao/PushUserTable.php	/^    public function resetErrorCount(Array $tokens)$/;"	f
response	controller/PushResponseController.php	/^    private function response()$/;"	f
response	lib/PushServer/model/gcm/Gcm.php	/^        $response = @curl_exec($ch);$/;"	v
responseCount	controller/PushResponseController.php	/^        $responseCount = $pushResponseTable->countByPushId($pushResponse->getPushId());$/;"	v
responseData	lib/PushServer/model/gcm/Gcm.php	/^        $responseData = json_decode($response);$/;"	v
restorationPushEntityByKey	model/queue/PushQueue.php	/^    protected function restorationPushEntityByKey($key)$/;"	f
restorationPushUserEntityByValue	model/queue/PushSendingQueue.php	/^    protected function restorationPushUserEntityByValue($value)$/;"	f
result	controller/PushDeliveryRequestBatchController.php	/^        $result = $pushSendingQueue->sending($push);$/;"	v
result	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $result = $pdoStatement->execute($params);$/;"	v
result	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $result = $pdoStatement->execute(array($this->timeZone));$/;"	v
result	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    $result = $pdoStatement->execute($params);$/;"	v
result	lib/PushServer/model/queue/redis/RedisQueue.php	/^        $result = self::$redis->delete($this->key);$/;"	v
result	lib/PushServer/model/queue/redis/RedisQueue.php	/^        $result = self::$redis->exec();$/;"	v
result	model/dao/AllUsersHistoryTable.php	/^        $result = $pdoStatement->execute();$/;"	v
result	model/dao/EventCompetitionEntryTable.php	/^      $result = $pdoStatement->execute();$/;"	v
result	model/dao/EventCompetitionEntryTable.php	/^      $result = $pdoStatement->fetchAll();$/;"	v
result	model/dao/LastLaunchHistoryTable.php	/^        $result = $pdoStatement->execute($params);$/;"	v
result	model/dao/LoginTable.php	/^      $result = $pdoStatement->execute();$/;"	v
result	model/dao/LoginTable.php	/^      $result = $pdoStatement->fetchAll();$/;"	v
result	model/dao/ProfileTable.php	/^      $result = $pdoStatement->execute();$/;"	v
result	model/dao/ProfileTable.php	/^      $result = $pdoStatement->fetchAll();$/;"	v
result	model/dao/PushUserTable.php	/^      $result = $pdoStatement->execute();$/;"	v
result	model/dao/PushUserTable.php	/^      $result = $this->findAllUsers();$/;"	v
result	model/dao/UserTable.php	/^      $result = $pdoStatement->execute();$/;"	v
result	model/dao/UserTable.php	/^      $result = $pdoStatement->fetchAll();$/;"	v
result	model/queue/PushReadyQueue.php	/^        $result = $this->enqueueAll($values);$/;"	v
rollback	controller/PushPreparationBatchController.php	/^    protected function rollback(PushEntity $push)$/;"	f
rollback	controller/PushStartBatchController.php	/^    protected function rollback(PushEntity $push)$/;"	f
rollback	lib/PushServer/controller/BatchController.php	/^    protected function rollback()$/;"	f
rootCertificate	lib/PushServer/model/apns/Apns.php	/^    protected $rootCertificate = 'entrust_root_certification_authority.pem';$/;"	v
run	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function run()$/;"	f
sBuffer	lib/PushServer/core/ApnsPHP/Feedback.php	/^					$sBuffer = substr($sBuffer, $nFeedbackTupleLen);$/;"	v
sBuffer	lib/PushServer/core/ApnsPHP/Feedback.php	/^		$sBuffer = '';$/;"	v
sCurrBuffer	lib/PushServer/core/ApnsPHP/Feedback.php	/^			$sBuffer .= $sCurrBuffer = fread($this->_hSocket, 8192);$/;"	v
sCustomIdentifier	lib/PushServer/core/ApnsPHP/Push.php	/^				$sCustomIdentifier = (string)$message->getCustomIdentifier();$/;"	v
sCustomIdentifier	lib/PushServer/core/ApnsPHP/Push.php	/^				$sCustomIdentifier = sprintf('[custom identifier: %s]', empty($sCustomIdentifier) ? 'unset' : $sCustomIdentifier);$/;"	v
sErrorResponse	lib/PushServer/core/ApnsPHP/Push.php	/^		$sErrorResponse = @fread($this->_hSocket, self::ERROR_RESPONSE_SIZE);$/;"	v
sFeedbackTuple	lib/PushServer/core/ApnsPHP/Feedback.php	/^					$sFeedbackTuple = substr($sBuffer, 0, $nFeedbackTupleLen);$/;"	v
sFile	lib/PushServer/core/ApnsPHP/Autoload.php	/^	$sFile = sprintf('%s%s%s.php',$/;"	v
sJSON	lib/PushServer/core/ApnsPHP/Message.php	/^			$sJSON = preg_replace_callback($/;"	v
sJSON	lib/PushServer/core/ApnsPHP/Message.php	/^		$sJSON = json_encode($this->_getPayload(), defined('JSON_UNESCAPED_UNICODE') ? JSON_UNESCAPED_UNICODE : 0);$/;"	v
sJSONPayload	lib/PushServer/core/ApnsPHP/Message.php	/^			$sJSONPayload = $this->getPayload();$/;"	v
sJSONPayload	lib/PushServer/core/ApnsPHP/Message.php	/^			$sJSONPayload = '';$/;"	v
sJSONPayload	lib/PushServer/core/ApnsPHP/Message.php	/^		$sJSONPayload = str_replace($/;"	v
sMessagePayload	lib/PushServer/core/ApnsPHP/Push.php	/^		$sMessagePayload = $message->getPayload();$/;"	v
sPath	lib/PushServer/core/ApnsPHP/Autoload.php	/^	$sPath = dirname(dirname(__FILE__));$/;"	v
sPropertyName	lib/PushServer/core/ApnsPHP/Message.php	/^			foreach($this->_aCustomProperties as $sPropertyName => $mPropertyValue) {$/;"	v
sRet	lib/PushServer/core/ApnsPHP/Push.php	/^		$sRet  = pack('CNNnH*', self::COMMAND_PUSH, $nMessageID, $nExpire > 0 ? time() + $nExpire : 0, self::DEVICE_BINARY_SIZE, $sDeviceToken);$/;"	v
sURL	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$sURL = $this->_aServiceURLs[$this->_nEnvironment];$/;"	v
save	model/dao/PushResponseTable.php	/^    public function save(PushResponseEntity $pushResponse)$/;"	f
save	model/dao/PushUserTable.php	/^    public function save(PushUserEntity $pushUser)$/;"	f
saveSettings	controller/PushSettingsController.php	/^    private function saveSettings()$/;"	f
scanfile	auto.loader.php	/^        static public function scanfile($path, $filename)$/;"	f
scanfile	lib/PushServer/auto.loader.php	/^        static public function scanfile($path, $filename)$/;"	f
searchKeyFormat	model/queue/PushReadyQueue.php	/^        $searchKeyFormat = sprintf(self::KEY_FORMAT, self::client(), '*', '*');;$/;"	v
searchKeyFormat	model/queue/PushStartQueue.php	/^        $searchKeyFormat = sprintf(self::KEY_FORMAT, self::client(), '*', '*');$/;"	v
searchReadyPushs	controller/PushStartBatchController.php	/^    private function searchReadyPushs()$/;"	f
segments	model/PushConditions.php	/^    $this->segments = isset($decodeConditions->segments) ? $decodeConditions->segments : NULL;$/;"	v
segments	model/PushConditions.php	/^  private $segments = NULL;$/;"	v
select	lib/PushServer/model/dao/Dao.php	/^    protected function select()$/;"	f
send	lib/PushServer/core/ApnsPHP/Push.php	/^	public function send()$/;"	f
sendPush	model/apns/EventApns.php	/^        $this->sendPush = $sendPush;$/;"	v
sendPush	model/apns/EventApns.php	/^    protected $sendPush = NULL;$/;"	v
sendPush	model/gcm/EventGcm.php	/^        $this->sendPush = $sendPush;$/;"	v
sendPush	model/gcm/EventGcm.php	/^    protected $sendPush = NULL;$/;"	v
sendRequest	lib/PushServer/model/gcm/Gcm.php	/^    protected function sendRequest(Array $tokens, $message)$/;"	f
sendUrl	lib/PushServer/model/gcm/Gcm.php	/^    protected $sendUrl = 'https:\/\/android.googleapis.com\/gcm\/send';$/;"	v
sending	model/queue/PushSendingQueue.php	/^    public function sending(PushEntity $push)$/;"	f
sendingPush	controller/PushDeliveryRequestBatchController.php	/^        $this->sendingPush = $pushTable->find(array('id' => $push->getId()));$/;"	v
sendingPush	controller/PushDeliveryRequestBatchController.php	/^    private $sendingPush = NULL;$/;"	v
sendingToCompleted	controller/PushDeliveryRequestBatchController.php	/^    private function sendingToCompleted($successTokens, $errorTokens)$/;"	f
seperator	lib/PushServer/core/Logger/Logger.php	/^                $seperator = empty($callStack) ? '' : '>';$/;"	v
sessionTokens	model/apns/EventApns.php	/^        $sessionTokens = array_chunk($tokens, 40);$/;"	v
sessionTokens	model/gcm/EventGcm.php	/^        $sessionTokens = array_chunk($tokens, 1000);$/;"	v
setActionLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function setActionLocKey($sActionLocKey = '')$/;"	f
setAutoAdjustLongPayload	lib/PushServer/core/ApnsPHP/Message.php	/^	public function setAutoAdjustLongPayload($bAutoAdjust)$/;"	f
setBadge	lib/PushServer/core/ApnsPHP/Message.php	/^	public function setBadge($nBadge)$/;"	f
setColumns	model/dao/EventDao.php	/^    private function setColumns()$/;"	f
setConnectRetryInterval	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function setConnectRetryInterval($nRetryInterval)$/;"	f
setConnectRetryTimes	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function setConnectRetryTimes($nRetryTimes)$/;"	f
setConnectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function setConnectTimeout($nTimeout)$/;"	f
setCustomIdentifier	lib/PushServer/core/ApnsPHP/Message.php	/^	public function setCustomIdentifier($mCustomIdentifier)$/;"	f
setCustomProperty	lib/PushServer/core/ApnsPHP/Message.php	/^	public function setCustomProperty($sName, $mValue)$/;"	f
setDefaultFetchMode	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function setDefaultFetchMode()$/;"	f
setDefaultTimeZone	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function setDefaultTimeZone()$/;"	f
setDeliveryTargetUsers	model/entity/PushEntity.php	/^    public function setDeliveryTargetUsers($users)$/;"	f
setDeliveryTimeFromSince1970	model/entity/PushEntity.php	/^    public function setDeliveryTimeFromSince1970($timestamp)$/;"	f
setExpiry	lib/PushServer/core/ApnsPHP/Message.php	/^	public function setExpiry($nExpiryValue)$/;"	f
setFields	model/dao/PushUserTable.php	/^    public function setFields($fields) {$/;"	f
setLaunchImage	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function setLaunchImage($sLaunchImage)$/;"	f
setLocArgs	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function setLocArgs($aLocArgs)$/;"	f
setLocKey	lib/PushServer/core/ApnsPHP/Message/Custom.php	/^	public function setLocKey($sLocKey)$/;"	f
setLogger	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function setLogger(ApnsPHP_Log_Interface $logger)$/;"	f
setProcesses	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function setProcesses($nProcesses)$/;"	f
setPushEnable	model/entity/PushUserEntity.php	/^    public function setPushEnable($pushEnable)$/;"	f
setRootCertificationAuthority	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function setRootCertificationAuthority($sRootCertificationAuthorityFile)$/;"	f
setSendRetryTimes	lib/PushServer/core/ApnsPHP/Push.php	/^	public function setSendRetryTimes($nRetryTimes)$/;"	f
setSocketSelectTimeout	lib/PushServer/core/ApnsPHP/Abstract.php	/^	public function setSocketSelectTimeout($nSelectTimeout)$/;"	f
setSound	lib/PushServer/core/ApnsPHP/Message.php	/^	public function setSound($sSound = 'default')$/;"	f
setText	lib/PushServer/core/ApnsPHP/Message.php	/^	public function setText($sText)$/;"	f
setUserId	model/entity/PushUserEntity.php	/^    public function setUserId($userId)$/;"	f
sets	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $sets = array();$/;"	v
silent	model/apns/EventApns.php	/^        $this->silent = (TRUE === $silent);$/;"	v
silent	model/apns/EventApns.php	/^    protected $silent   = FALSE;$/;"	v
silent	model/apns/EventApns.php	/^    public function silent($silent)$/;"	f
silent	model/gcm/EventGcm.php	/^      $this->silent = (TRUE === $silent);$/;"	v
silent	model/gcm/EventGcm.php	/^    protected $silent   = FALSE;$/;"	v
silent	model/gcm/EventGcm.php	/^    public function silent($silent)$/;"	f
sleepTime	lib/PushServer/model/dao/mysql/MySqlDao.php	/^                $sleepTime = $i * $this->rate;$/;"	v
sleepTime	lib/PushServer/model/queue/redis/RedisQueue.php	/^                $sleepTime = $i * $this->rate;$/;"	v
splitKeys	model/queue/PushQueue.php	/^        $splitKeys    = explode('.', $key);$/;"	v
sql	lib/PushServer/model/dao/mysql/MySqlDao.php	/^            $sql = sprintf('%s WHERE %s', $sql, $this->buildWhere($where, $params));$/;"	v
sql	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $sql = sprintf('%s (`%s`) VALUES (%s)', $sql, implode('`, `', $keys), implode(', ', $placeholders));$/;"	v
sql	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $sql = sprintf('%s SET %s', $sql, $this->buildUpdateSets($data, $params));$/;"	v
sql	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $sql = sprintf('INSERT INTO `%s`.`%s`', $this->name, $this->table);$/;"	v
sql	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $sql = sprintf('SELECT `%s` FROM `%s`.`%s`', implode('`,`', $this->fields), $this->name, $this->table);$/;"	v
sql	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $sql = sprintf('UPDATE `%s`.`%s`', $this->name, $this->table);$/;"	v
sql	model/dao/AllUsersHistoryTable.php	/^        $sql = sprintf('SELECT$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^        $sql = $sql . "AND IF(t2.elected is NULL, 0, t2.elected) >= :from$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^        $sql = $sql . "AND IF(t2.rejected is NULL, 0, t2.rejected) >= :from$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^        $sql = $sql . "AND if(t2.elected is NULL, 0, t2.elected) <= :to$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^        $sql = $sql . "AND if(t2.rejected is NULL, 0, t2.rejected) <= :to$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^        $sql = $sql . $this->table_event_competition_entries . '.status <> :status';$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^        $sql = $sql . $this->table_event_competition_entries . '.status = :status';$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^      $sql = "$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^      $sql = '$/;"	v
sql	model/dao/EventCompetitionEntryTable.php	/^      $sql = 'SELECT$/;"	v
sql	model/dao/LastLaunchHistoryTable.php	/^        $sql = sprintf('SELECT$/;"	v
sql	model/dao/LoginTable.php	/^        $sql = $sql . ' AND created <= :to';$/;"	v
sql	model/dao/LoginTable.php	/^        $sql = $sql . ' AND created >= :from';$/;"	v
sql	model/dao/LoginTable.php	/^      $sql = $sql . ' GROUP BY user_id';$/;"	v
sql	model/dao/LoginTable.php	/^      $sql = $sql . ' WHERE 1=1';$/;"	v
sql	model/dao/LoginTable.php	/^      $sql = '$/;"	v
sql	model/dao/ProfileTable.php	/^      $sql = '$/;"	v
sql	model/dao/PushUserTable.php	/^      $sql = sprintf('SELECT `%s` FROM `%s`.`%s`', implode('`,`', $this->fields), $this->name, $this->table);$/;"	v
sql	model/dao/UserTable.php	/^      $sql = '$/;"	v
stackTrace	lib/PushServer/controller/Controller.php	/^        $stackTrace = debug_backtrace();$/;"	v
stackTrace	lib/PushServer/core/Logger/Logger.php	/^            $stackTrace = debug_backtrace();$/;"	v
start	lib/PushServer/controller/BatchController.php	/^    protected function start()$/;"	f
start	lib/PushServer/core/ApnsPHP/Push/Server.php	/^	public function start()$/;"	f
start	model/queue/PushStartQueue.php	/^    public function start(PushEntity $push)$/;"	f
startPushKey	model/queue/PushStartQueue.php	/^        $startPushKey = $startPushKeys[array_rand($startPushKeys)];$/;"	v
startPushKeys	model/queue/PushStartQueue.php	/^        $startPushKeys = parent::findAll($searchKeyFormat);$/;"	v
startToSending	controller/PushDeliveryRequestBatchController.php	/^    private function startToSending()$/;"	f
status	model/PushConditions.php	/^      $status               = isset($lottery_status->status)                ? $lottery_status->status               : NULL;$/;"	v
status	model/dao/EventCompetitionEntryTable.php	/^      $status = 'checked';$/;"	v
status	model/entity/EventCompetitionEntryEntity.php	/^    protected $status                                 = NULL;$/;"	v
status	model/entity/PushEntity.php	/^    protected $status              = PushState::Wait;$/;"	v
stepLog	lib/PushServer/controller/BatchController.php	/^    private $stepLog = array();$/;"	v
stepLog	lib/PushServer/controller/BatchController.php	/^    private function stepLog($log)$/;"	f
stepTime	lib/PushServer/controller/BatchController.php	/^        $stepTime = $this->updateStepTime();$/;"	v
stepTime	lib/PushServer/controller/BatchController.php	/^        $stepTime = microtime(TRUE) - $this->stepTime;$/;"	v
stepTime	lib/PushServer/controller/BatchController.php	/^        $this->stepTime = microtime(TRUE);$/;"	v
stepTime	lib/PushServer/controller/BatchController.php	/^    private $stepTime = 0;$/;"	v
storedPushResponse	model/dao/PushResponseTable.php	/^        $storedPushResponse = $this->fetchByPushResponse($pushResponse);$/;"	v
streamContext	lib/PushServer/core/ApnsPHP/Abstract.php	/^		$streamContext = stream_context_create(array('ssl' => array($/;"	v
successTokens	controller/PushDeliveryRequestBatchController.php	/^        $successTokens = array();$/;"	v
successTokens	controller/PushDeliveryRequestBatchController.php	/^        $successTokens = array_merge($successTokens, $apnsTokens);$/;"	v
successTokens	controller/PushDeliveryRequestBatchController.php	/^        $successTokens = array_merge($successTokens, $gcmTokens);$/;"	v
successTokens	controller/PushTestController.php	/^    private $successTokens = array('apns' => array(), 'gcm' => array());$/;"	v
table	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $table    = NULL;$/;"	v
table	model/dao/AllUsersHistoryTable.php	/^    protected $table  = 'users';$/;"	v
table	model/dao/EventCompetitionEntryTable.php	/^    protected $table  = 'event_competition_entries';$/;"	v
table	model/dao/LastLaunchHistoryTable.php	/^    protected $table  = 'gt_login';$/;"	v
table	model/dao/LoginTable.php	/^    protected $table  = 'logins';$/;"	v
table	model/dao/ProfileTable.php	/^    protected $table  = 'profiles';$/;"	v
table	model/dao/PushConditioner.php	/^    protected $table  = 'push_users';$/;"	v
table	model/dao/PushResponseTable.php	/^    protected $table  = 'gt_push';$/;"	v
table	model/dao/PushTable.php	/^    protected $table  = 'pushs';$/;"	v
table	model/dao/PushUserTable.php	/^    protected $table = 'push_users';$/;"	v
table	model/dao/UserTable.php	/^    protected $table  = 'users';$/;"	v
table_event_competition_entries	model/dao/EventCompetitionEntryTable.php	/^      $this->table_event_competition_entries = sprintf('`%s`.`%s`', $this->name, $this->table);$/;"	v
table_event_competition_entries	model/dao/EventCompetitionEntryTable.php	/^    protected $table_event_competition_entries = NULL;$/;"	v
table_event_competition_lottery_group_relations	model/dao/EventCompetitionEntryTable.php	/^      $this->table_event_competition_lottery_group_relations = sprintf('`%s`.`%s`', $this->name, 'event_competition_lottery_group_relations');$/;"	v
table_event_competition_lottery_group_relations	model/dao/EventCompetitionEntryTable.php	/^    protected $table_event_competition_lottery_group_relations = NULL;$/;"	v
table_event_mypage_items	model/dao/ProfileTable.php	/^      $this->table_event_mypage_items = sprintf('`%s`.`%s`', $this->name, 'event_mypage_items');$/;"	v
table_event_mypage_items	model/dao/ProfileTable.php	/^    protected $table_event_mypage_items = NULL;$/;"	v
table_logins	model/dao/LoginTable.php	/^      $this->table_logins = sprintf('`%s`.`%s`', $this->name, $this->table);$/;"	v
table_logins	model/dao/LoginTable.php	/^    protected $table_logins = NULL;$/;"	v
table_profiles	model/dao/ProfileTable.php	/^      $this->table_profiles = sprintf('`%s`.`%s`', $this->name, $this->table);$/;"	v
table_profiles	model/dao/ProfileTable.php	/^    protected $table_profiles = NULL;$/;"	v
table_push_users	model/dao/EventCompetitionEntryTable.php	/^      $this->table_push_users = sprintf('`%s`.`%s`', $this->name, 'push_users');$/;"	v
table_push_users	model/dao/EventCompetitionEntryTable.php	/^    protected $table_push_users = NULL;$/;"	v
table_push_users	model/dao/PushUserTable.php	/^      $this->table_push_users = sprintf('`%s`.`%s`', $this->name, $this->table);$/;"	v
table_push_users	model/dao/PushUserTable.php	/^    protected $table_push_users = NULL;$/;"	v
table_users	model/dao/UserTable.php	/^      $this->table_users = sprintf('`%s`.`%s`', $this->name, $this->table);$/;"	v
table_users	model/dao/UserTable.php	/^    protected $table_users = NULL;$/;"	v
target	model/PushConditions.php	/^    $target               = isset($this->segments->target)          ? $this->segments->target         : NULL;$/;"	v
targetCount	controller/PushPreparationBatchController.php	/^        $targetCount = $push->countDeliveryTargetUsers();$/;"	v
targets	controller/PushDeliveryRequestBatchController.php	/^        $targets = $pushSendingQueue->getTargetWithLimit($this->sendingPush, $this->maxTargets);$/;"	v
targets	controller/PushDeliveryRequestBatchController.php	/^        $this->targets = $targets;$/;"	v
targets	controller/PushDeliveryRequestBatchController.php	/^    private $targets     = NULL;$/;"	v
targets	model/queue/PushSendingQueue.php	/^        $targets = array();$/;"	v
the	lib/PushServer/core/ApnsPHP/Autoload.php	/^ * class\/interface which hasn't been defined yet. By calling this function the$/;"	f
then	lib/PushServer/core/ApnsPHP/Autoload.php	/^\/\/ If your code has an existing __autoload function then this function must be explicitly registered on the __autoload stack.$/;"	f
time	model/entity/PushEntity.php	/^        $time = (FALSE === $time) ? time() : $time;$/;"	v
time	model/entity/PushEntity.php	/^        $time = strtotime($this->deliveryTime);$/;"	v
timeZone	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $timeZone = 'Asia\/Tokyo';$/;"	v
timeout	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $timeout  = 4;$/;"	v
timeout	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $timeout = 4;$/;"	v
timeout	model/dao/EventDao.php	/^    protected $timeout = 1;$/;"	v
title	model/entity/PushEntity.php	/^    protected $title               = NULL;$/;"	v
to	lib/PushServer/core/ApnsPHP/Log/Interface.php	/^ * ApnsPHP_Abstract based class to use a custom log.$/;"	c
to	model/PushConditions.php	/^    $to   = isset($this->segments->last_launch_time->to)    ? $this->segments->last_launch_time->to   : NULL;$/;"	v
to	model/PushConditions.php	/^    $to   = isset($this->segments->number_of_elected->to)   ? $this->segments->number_of_elected->to    : NULL;$/;"	v
to	model/PushConditions.php	/^    $to   = isset($this->segments->number_of_rejected->to)    ? $this->segments->number_of_rejected->to   : NULL;$/;"	v
to	model/dao/EventCompetitionEntryTable.php	/^    public function findUserIdsByNumberOfElected($from = NULL, $to = NULL) {$/;"	v
to	model/dao/EventCompetitionEntryTable.php	/^    public function findUserIdsByNumberOfRejected($from = NULL, $to = NULL) {$/;"	v
to	model/dao/LastLaunchHistoryTable.php	/^    public function fetchUserIdsByLastLaunchTime($from = NULL, $to = NULL)$/;"	v
to	model/dao/LoginTable.php	/^    public function findUserIdsByLastLaunchTime($from = NULL, $to = NULL) {$/;"	v
toArray	lib/PushServer/model/entity/Entity.php	/^    public function toArray()$/;"	f
toArray	model/entity/PushResponseEntity.php	/^    public function toArray()$/;"	f
toArray	model/entity/PushUserEntity.php	/^    public function toArray()$/;"	f
token	controller/PushDeliveryRequestBatchController.php	/^            $token = $error['token'];$/;"	v
token	controller/PushRegistrationController.php	/^        $token = $this->tokenFilter(HttpRequest::getParam('token'));$/;"	v
token	controller/PushResponseController.php	/^        $token  = $this->tokenFilter(HttpRequest::getParam('token'));$/;"	v
token	controller/PushSettingsController.php	/^        $token = HttpRequest::getParam('token');$/;"	v
token	controller/PushTestController.php	/^            $token = $error['token'];$/;"	v
token	controller/PushTestController.php	/^        $token = $error['token'];$/;"	v
token	model/entity/PushUserEntity.php	/^    protected $token           = NULL;$/;"	v
tokenFilter	controller/PushRegistrationController.php	/^    private function tokenFilter($token)$/;"	f
tokenFilter	controller/PushResponseController.php	/^    private function tokenFilter($token)$/;"	f
tokenFilter	controller/PushSettingsController.php	/^    private function tokenFilter($token)$/;"	f
try	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $try      = 1;$/;"	v
try	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $try     = 1;$/;"	v
try	model/dao/EventDao.php	/^    protected $try     = 1;$/;"	v
tryConnectDataBase	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    private function tryConnectDataBase($dsn)$/;"	f
tryConnectRedis	lib/PushServer/model/queue/redis/RedisQueue.php	/^    private function tryConnectRedis()$/;"	f
type	model/PushConditions.php	/^    $this->type     = isset($decodeConditions->type)     ? $decodeConditions->type     : NULL;$/;"	v
type	model/PushConditions.php	/^  private $type     = NULL;$/;"	v
untargetByOldToken	model/dao/PushUserTable.php	/^    public function untargetByOldToken($oldToken)$/;"	f
update	lib/PushServer/model/dao/Dao.php	/^    protected function update()$/;"	f
update	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    public function update($data, $where = NULL)$/;"	f
updateErrorCount	model/dao/PushUserTable.php	/^    public function updateErrorCount(Array $tokens)$/;"	f
updateResponseCount	model/dao/PushTable.php	/^    public function updateResponseCount($id, $count)$/;"	f
updateSets	model/dao/PushTable.php	/^        $updateSets = array($/;"	v
updateSets	model/dao/PushTable.php	/^        $updateSets = array_merge($updateSets, $data);$/;"	v
updateState	controller/PushDeliveryRequestBatchController.php	/^    private function updateState($data)$/;"	f
updateState	controller/PushPreparationBatchController.php	/^    private function updateState(PushEntity $push)$/;"	f
updateState	controller/PushStartBatchController.php	/^    private function updateState(PushEntity $push)$/;"	f
updateState	model/dao/PushTable.php	/^    public function updateState(PushEntity $push, $state, $data = array())$/;"	f
updateStepTime	lib/PushServer/controller/BatchController.php	/^    private function updateStepTime()$/;"	f
user	controller/PushRegistrationController.php	/^        $user = $userTable->fetchByMobileId(HttpRequest::getParam('mobileId'));$/;"	v
user	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $this->user = getenv('DB_USER') ? getenv('DB_USER') : $this->user;$/;"	v
user	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    protected $user     = 'root';$/;"	v
user	model/dao/PushUserTable.php	/^            $user = $this->fetchByUserId($id);$/;"	v
user	model/dao/PushUserTable.php	/^        $user = $this->fetchByToken($token);$/;"	v
userId	model/entity/EventCompetitionEntryEntity.php	/^    protected $userId                                 = NULL;$/;"	v
userId	model/entity/PushUserEntity.php	/^        $this->userId = $userId;$/;"	v
userId	model/entity/PushUserEntity.php	/^    protected $userId          = NULL;$/;"	v
userIds	model/dao/AllUsersHistoryTable.php	/^        $userIds = array();$/;"	v
userIds	model/dao/EventCompetitionEntryTable.php	/^      $userIds = array();$/;"	v
userIds	model/dao/LastLaunchHistoryTable.php	/^        $userIds = array();$/;"	v
userIds	model/dao/LoginTable.php	/^      $userIds = array();$/;"	v
userIds	model/dao/ProfileTable.php	/^      $userIds = array();$/;"	v
userIds	model/dao/PushConditioner.php	/^        $userIds = $pushConditions->filteringUsers();$/;"	v
userIds	model/dao/PushUserTable.php	/^      $userIds = array();$/;"	v
userIds	model/dao/UserTable.php	/^      $userIds = array();$/;"	v
userTable	controller/PushRegistrationController.php	/^        $userTable = new UserTable();$/;"	v
users	controller/PushPreparationBatchController.php	/^            $users = $pushConditioner->filteringUsers($push);$/;"	v
users	controller/PushPreparationBatchController.php	/^      $users = $pushConditions->filteringUsers(NULL);$/;"	v
users	model/PushConditions.php	/^    $users = array();$/;"	v
users	model/PushConditions.php	/^    $users = array_intersect($users, $usersByCheckedStatus);$/;"	v
users	model/PushConditions.php	/^    $users = array_intersect($users, $usersByLanguage);$/;"	v
users	model/PushConditions.php	/^    $users = array_intersect($users, $usersByLastLaunchDate);$/;"	v
users	model/PushConditions.php	/^    $users = array_intersect($users, $usersByLotteryStatus);$/;"	v
users	model/PushConditions.php	/^    $users = array_intersect($users, $usersByMypageStatus);$/;"	v
users	model/PushConditions.php	/^    $users = array_intersect($users, $usersByNumberOfElected);$/;"	v
users	model/PushConditions.php	/^    $users = array_intersect($users, $usersByNumberOfRejected);$/;"	v
usersByCheckedStatus	model/PushConditions.php	/^    $usersByCheckedStatus = array();$/;"	v
usersByCheckedStatus	model/PushConditions.php	/^    $usersByCheckedStatus = array_unique($usersByCheckedStatus);$/;"	v
usersByLanguage	model/PushConditions.php	/^    $usersByLanguage = $this->modelUsers->findUserIdsByLanguage($language);$/;"	v
usersByLastLaunchDate	model/PushConditions.php	/^    $usersByLastLaunchDate = $this->modelLogins->findUserIdsByLastLaunchTime($from, $to);$/;"	v
usersByLotteryStatus	model/PushConditions.php	/^    $usersByLotteryStatus = $this->modelEventCompetitionEntries->findUserIdsByEventCompetitionLotteryStatus($event_competition_id, $target);$/;"	v
usersByLotteryStatus	model/PushConditions.php	/^    $usersByLotteryStatus = array();$/;"	v
usersByLotteryStatus	model/PushConditions.php	/^    $usersByLotteryStatus = array_unique($usersByLotteryStatus);$/;"	v
usersByMypageStatus	model/PushConditions.php	/^    $usersByMypageStatus = array();$/;"	v
usersByMypageStatus	model/PushConditions.php	/^    $usersByMypageStatus = array_unique($usersByMypageStatus);$/;"	v
usersByNumberOfElected	model/PushConditions.php	/^    $usersByNumberOfElected = $this->modelEventCompetitionEntries->findUserIdsByNumberOfElected($from, $to);$/;"	v
usersByNumberOfRejected	model/PushConditions.php	/^    $usersByNumberOfRejected = $this->modelEventCompetitionEntries->findUserIdsByNumberOfRejected($from, $to);$/;"	v
value	lib/PushServer/model/queue/redis/RedisQueue.php	/^            $value = self::$redis->rpop($this->key);$/;"	v
value	lib/PushServer/model/queue/redis/RedisQueue.php	/^    protected $value = NULL;$/;"	v
value	model/PushConditions.php	/^      $value  = isset($mypage->value) ? $mypage->value  : NULL;$/;"	v
value	model/queue/PushSendingQueue.php	/^            $value = self::$redis->lindex($this->key, $i);$/;"	v
values	lib/PushServer/model/queue/redis/RedisQueue.php	/^        $values = array();$/;"	v
values	model/queue/PushReadyQueue.php	/^        $values = $this->buildValues($push);$/;"	v
values	model/queue/PushReadyQueue.php	/^        $values = array();$/;"	v
values	model/queue/PushSendingQueue.php	/^        $values = $this->loadWithLimit($limit);$/;"	v
values	model/queue/PushSendingQueue.php	/^        $values = array();$/;"	v
waitPushs	controller/PushPreparationBatchController.php	/^        $this->waitPushs = $waitPushs;$/;"	v
waitPushs	controller/PushPreparationBatchController.php	/^        $waitPushs = $pushTable->fetchAllWaitPush();$/;"	v
waitPushs	controller/PushPreparationBatchController.php	/^    private $waitPushs = array();$/;"	v
waitPushs	model/dao/PushTable.php	/^        $waitPushs = $this->findAll(array($/;"	v
waitToReady	controller/PushPreparationBatchController.php	/^    private function waitToReady()$/;"	f
where	lib/PushServer/model/dao/mysql/MySqlDao.php	/^        $where = array();$/;"	v
where	lib/PushServer/model/dao/mysql/MySqlDao.php	/^    public function update($data, $where = NULL)$/;"	v
